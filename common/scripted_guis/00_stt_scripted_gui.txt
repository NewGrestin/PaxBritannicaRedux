scripted_gui = {

	state_transfer_tool = {
		context_type = selected_state_context
		window_name = "state_transfer_tool_container"
		parent_window_token = selected_state_view
		dirty = ROOT.update_stt_gui

		ai_enabled = {
			always = no
		}

		visible = {
			has_global_flag = transfer_enabled
		}

		effects = {
			mark_state_click = {
				THIS = { #for the tooltip
					if = {
						limit = { has_state_flag = marked_for_transfer }
						custom_effect_tooltip = STT_clear_mark
						clr_state_flag = marked_for_transfer
						if = {
							limit = { check_variable = { ROOT.marked_states^num = 1 } }
							clear_array = ROOT.marked_states
							hidden_effect = {
								ROOT = { remove_mission = stt_highlight_states }
							}
							clear_variable = ROOT.update_stt_gui
						}
						else = {
							remove_from_array = { ROOT.marked_states = THIS }
							hidden_effect = {
								ROOT = {
									remove_mission = stt_highlight_states
									activate_mission = stt_highlight_states
								}
							}
							add_to_variable = { ROOT.update_stt_gui = 1 }
						}
					}
					else = {
						custom_effect_tooltip = STT_set_mark
						set_state_flag = marked_for_transfer
						add_to_array = { ROOT.marked_states = THIS }
						hidden_effect = {
							ROOT = {
								remove_mission = stt_highlight_states
								activate_mission = stt_highlight_states
							}
						}
						add_to_variable = { ROOT.update_stt_gui = 1 }
					}
				}
			}
			mark_all_states_click = {
				effect_tooltip = {
					every_state = {
						limit = {
							is_owned_by = PREV.owner
							NOT = { has_state_flag = marked_for_transfer }
						}
						custom_effect_tooltip = STT_set_mark
					}
				}
				hidden_effect = {
					owner = {
						every_owned_state = {
							limit = {
								NOT = { has_state_flag = marked_for_transfer }
							}
							set_state_flag = marked_for_transfer
							add_to_array = { ROOT.marked_states = THIS }
						}
					}
					ROOT = {
						remove_mission = stt_highlight_states
						activate_mission = stt_highlight_states
					}
				}
				add_to_variable = { ROOT.update_stt_gui = 1 }
			}
			mark_colonial_states_click = {
				effect_tooltip = {
					every_state = {
						limit = {
							is_owned_by = PREV.owner
							NOT = {
								is_in_home_area = yes
								has_state_flag = marked_for_transfer
							}
						}
						custom_effect_tooltip = STT_set_mark
					}
				}
				hidden_effect = {
					owner = {
						every_owned_state = {
							limit = {
								NOT = {
									is_in_home_area = yes
									has_state_flag = marked_for_transfer
								}
							}
							set_state_flag = marked_for_transfer
							add_to_array = { ROOT.marked_states = THIS }
						}
					}
					ROOT = {
						remove_mission = stt_highlight_states
						activate_mission = stt_highlight_states
					}
				}
				add_to_variable = { ROOT.update_stt_gui = 1 }
			}
			mark_noncore_states_click = {
				effect_tooltip = {
					every_state = {
						limit = {
							is_owned_by = PREV.owner
							NOT = {
								is_core_of = PREV.owner
								has_state_flag = marked_for_transfer
							}
						}
						custom_effect_tooltip = STT_set_mark
					}
				}
				hidden_effect = {
					owner = {
						every_owned_state = {
							limit = {
								NOT = {
									is_core_of = PREV
									has_state_flag = marked_for_transfer
								}
							}
							set_state_flag = marked_for_transfer
							add_to_array = { ROOT.marked_states = THIS }
						}
					}
					ROOT = {
						remove_mission = stt_highlight_states
						activate_mission = stt_highlight_states
					}
				}
				add_to_variable = { ROOT.update_stt_gui = 1 }
			}
			clear_all_markings_click = {
				effect_tooltip = {
					every_state = {
						limit = { has_state_flag = marked_for_transfer }
						custom_effect_tooltip = STT_clear_mark
					}
				}
				hidden_effect = {
					for_each_scope_loop = {
						array = ROOT.marked_states
						clr_state_flag = marked_for_transfer
					}
					ROOT = { remove_mission = stt_highlight_states }
				}
				clear_array = ROOT.marked_states
				clear_variable = ROOT.update_stt_gui
			}
			award_states_click = {
				effect_tooltip = {
					every_state = {
						limit = {
							has_state_flag = marked_for_transfer
							NOT = { is_owned_by = var:PREV.owner }
						}
						transfer_state_to = var:PREV.owner
					}
				}
				hidden_effect = {
					for_each_scope_loop = {
						array = ROOT.marked_states
						if = {
							limit = { NOT = { is_owned_by = var:PREV.owner } }
							transfer_state_to = var:PREV.owner
						}
					}
				}
				add_to_variable = { ROOT.update_stt_gui = 1 }
			}
			add_cores_click = {
				effect_tooltip = {
					every_state = {
						limit = {
							has_state_flag = marked_for_transfer
							NOT = { is_core_of = var:PREV.owner }
						}
						add_core_of = var:PREV.owner
					}
				}
				hidden_effect = {
					for_each_scope_loop = {
						array = ROOT.marked_states
						if = {
							limit = { is_claimed_by = var:PREV.owner }
							remove_claim_by = var:PREV.owner
						}
						if = {
							limit = { NOT = { is_core_of = var:PREV.owner } }
							add_core_of = var:PREV.owner
						}
					}
				}
				add_to_variable = { ROOT.update_stt_gui = 1 }
			}
			remove_cores_click = {
				effect_tooltip = {
					every_state = {
						limit = {
							has_state_flag = marked_for_transfer
							is_core_of = var:PREV.owner
						}
						remove_core_of = var:PREV.owner
					}
				}
				hidden_effect = {
					for_each_scope_loop = {
						array = ROOT.marked_states
						if = {
							limit = { is_core_of = var:PREV.owner }
							remove_core_of = var:PREV.owner
						}
					}
				}
				add_to_variable = { ROOT.update_stt_gui = 1 }
			}
			add_claims_click = {
				effect_tooltip = {
					every_state = {
						limit = {
							has_state_flag = marked_for_transfer
							NOT = {
								is_core_of = var:PREV.owner
								is_claimed_by = var:PREV.owner
							}
						}
						add_claim_by = var:PREV.owner
					}
				}
				hidden_effect = {
					for_each_scope_loop = {
						array = ROOT.marked_states
						if = {
							limit = {
								NOT = {
									is_core_of = var:PREV.owner
									is_claimed_by = var:PREV.owner
								}
							}
							add_claim_by = var:PREV.owner
						}
					}
				}
				add_to_variable = { ROOT.update_stt_gui = 1 }
			}
			remove_claims_click = {
				effect_tooltip = {
					every_state = {
						limit = {
							has_state_flag = marked_for_transfer
							is_claimed_by = var:PREV.owner
						}
						remove_claim_by = var:PREV.owner
					}
				}
				hidden_effect = {
					for_each_scope_loop = {
						array = ROOT.marked_states
						if = {
							limit = { is_claimed_by = var:PREV.owner }
							remove_claim_by = var:PREV.owner
						}
					}
				}
				add_to_variable = { ROOT.update_stt_gui = 1 }
			}
			add_dmz_click = {
				effect_tooltip = {
					every_state = {
						limit = {
							has_state_flag = marked_for_transfer
						}
						set_demilitarized_zone = yes
					}
				}
				hidden_effect = {
					for_each_scope_loop = {
						array = ROOT.marked_states
						set_demilitarized_zone = yes
					}
				}
				add_to_variable = { ROOT.update_stt_gui = 1 }
			}
			remove_dmz_click = {
				effect_tooltip = {
					every_state = {
						limit = {
							has_state_flag = marked_for_transfer
						}
						set_demilitarized_zone = no
					}
				}
				hidden_effect = {
					for_each_scope_loop = {
						array = ROOT.marked_states
						set_demilitarized_zone = no
					}
				}
				add_to_variable = { ROOT.update_stt_gui = 1 }
			}
			mark_country_click = {
				if = {
					limit = { has_event_target = marked_country }
					custom_effect_tooltip = STT_clear_country_mark
					clear_global_event_target = marked_country
					subtract_from_variable = { ROOT.update_stt_gui = 1 }
				}
				else = {
					custom_effect_tooltip = STT_set_country_mark
					THIS = { owner = { save_global_event_target_as = marked_country } }
					add_to_variable = { ROOT.update_stt_gui = 1 }
				}
			}
			add_puppet_click = {
				if = {
					limit = {
						has_event_target = marked_country
						event_target:marked_country = { is_subject = no }
						THIS = {
							owner = {
								NOT = {
									tag = event_target:marked_country
									has_war_with = event_target:marked_country
								}
								is_subject = no
							}
						}
					}
					THIS = {
						owner = {
							save_global_event_target_as = to_be_overlord
						}
					}
					ROOT = { country_event = generic_events.250 }
				}
			}
			remove_puppet_click = {
				if = {
					limit = {
						has_event_target = marked_country
						event_target:marked_country = { is_subject = yes }
					}
					ROOT = { country_event = generic_events.251 }
				}
			}
			add_faction_click = {
				if = {
					limit = {
						has_event_target = marked_country
						event_target:marked_country = {
							OR = {
								is_subject = no
								THIS = {
									owner = { has_subject = event_target:marked_country }
								}
							}
						}
						THIS = {
							owner = {
								NOT = {
									tag = event_target:marked_country
									is_in_faction_with = event_target:marked_country
									has_war_with = event_target:marked_country
								}
								is_in_faction = yes
							}
						}
					}
					THIS = {
						owner = {
							save_global_event_target_as = to_be_faction_leader
						}
					}
					ROOT = { country_event = generic_events.252 }
				}
				else_if = {
					limit = {
						has_event_target = marked_country
						event_target:marked_country = {
							is_in_faction = yes
							is_faction_leader = no
							is_subject = no
						}
					}
					ROOT = { country_event = generic_events.253 }
				}
			}
			remove_faction_click = {
				if = {
					limit = {
						has_event_target = marked_country
						event_target:marked_country = {
							is_subject = no
							is_in_faction = yes
						}
					}
					ROOT = { country_event = generic_events.254 }
				}
			}
			add_peace_click = {
				if = {
					limit = {
						has_event_target = marked_country
						THIS = {
							owner = {
								has_war_with = event_target:marked_country
							}
						}
					}
					THIS = {
						owner = {
							save_global_event_target_as = peace_target
						}
					}
					ROOT = { country_event = generic_events.255 }
				}
				else_if = {
					limit = {
						has_event_target = marked_country
						event_target:marked_country = { has_war = yes }
					}
					ROOT = { country_event = generic_events.256 }
				}
			}
			add_war_click = {
				if = {
					limit = {
						has_event_target = marked_country
						THIS = {
							owner = {
								event_target:marked_country = { can_declare_war_on = PREV }
							}
						}
					}
					THIS = {
						owner = { save_global_event_target_as = war_target }
					}
					ROOT = { country_event = generic_events.257 }
				}
			}
		}

		triggers = {
			mark_state_click_enabled = {
				stt_no_conflict_game_rules = yes
			}
			mark_all_states_click_enabled = {
				stt_no_conflict_game_rules = yes
				owner = {
					any_owned_state = {
						NOT = { has_state_flag = marked_for_transfer }
					}
				}
			}
			mark_colonial_states_click_enabled = {
				stt_no_conflict_game_rules = yes
				owner = {
					any_owned_state = {
						NOT = {
							is_in_home_area = yes
							has_state_flag = marked_for_transfer
						}
					}
				}
			}
			mark_noncore_states_click_enabled = {
				stt_no_conflict_game_rules = yes
				owner = {
					any_owned_state = {
						NOT = {
							is_core_of = owner
							has_state_flag = marked_for_transfer
						}
					}
				}
			}
			clear_all_markings_click_enabled = {
				has_variable = ROOT.marked_states^num
			}
			award_states_click_enabled = {
				has_variable = ROOT.marked_states^num
				any_of_scopes = {
					array = ROOT.marked_states
					has_state_flag = marked_for_transfer
					NOT = { is_owned_by = var:PREV.owner }
				}
			}
			add_cores_click_enabled = {
				has_variable = ROOT.marked_states^num
				NOT = {
					has_game_rule = { rule = stt_options option = MULTIPLAYER }
					has_game_rule = { rule = stt_options option = MP_NO_SUBJECT }
				}
				any_of_scopes = {
					array = ROOT.marked_states
					has_state_flag = marked_for_transfer
					NOT = { is_core_of = var:PREV.owner }
				}
			}
			remove_cores_click_enabled = {
				has_variable = ROOT.marked_states^num
				NOT = {
					has_game_rule = { rule = stt_options option = MULTIPLAYER }
					has_game_rule = { rule = stt_options option = MP_NO_SUBJECT }
				}
				any_of_scopes = {
					array = ROOT.marked_states
					has_state_flag = marked_for_transfer
					is_core_of = var:PREV.owner
				}
			}
			add_claims_click_enabled = {
				has_variable = ROOT.marked_states^num
				NOT = {
					has_game_rule = { rule = stt_options option = MULTIPLAYER }
					has_game_rule = { rule = stt_options option = MP_NO_SUBJECT }
				}
				any_of_scopes = {
					array = ROOT.marked_states
					has_state_flag = marked_for_transfer
					NOT = {
						is_core_of = var:PREV.owner
						is_claimed_by = var:PREV.owner
					}
				}
			}
			remove_claims_click_enabled = {
				has_variable = ROOT.marked_states^num
				NOT = {
					has_game_rule = { rule = stt_options option = MULTIPLAYER }
					has_game_rule = { rule = stt_options option = MP_NO_SUBJECT }
				}
				any_of_scopes = {
					array = ROOT.marked_states
					has_state_flag = marked_for_transfer
					is_claimed_by = var:PREV.owner
				}
			}
			add_dmz_click_enabled = {
				has_variable = ROOT.marked_states^num
				NOT = {
					has_game_rule = { rule = stt_options option = MULTIPLAYER }
					has_game_rule = { rule = stt_options option = MP_NO_SUBJECT }
				}
				any_of_scopes = {
					array = ROOT.marked_states
					has_state_flag = marked_for_transfer
					NOT = {
						is_demilitarized_zone = yes
					}
				}
			}
			remove_dmz_click_enabled = {
				has_variable = ROOT.marked_states^num
				NOT = {
					has_game_rule = { rule = stt_options option = MULTIPLAYER }
					has_game_rule = { rule = stt_options option = MP_NO_SUBJECT }
				}
				any_of_scopes = {
					array = ROOT.marked_states
					has_state_flag = marked_for_transfer
					is_demilitarized_zone = yes
				}
			}

			mark_country_click_enabled = {
				NOT = {
					has_game_rule = { rule = stt_options option = MULTIPLAYER }
					has_game_rule = { rule = stt_options option = MP_NO_SUBJECT }
				}
			}
			add_puppet_click_enabled = {
				has_event_target = marked_country
				event_target:marked_country = { is_subject = no }
				THIS = {
					owner = {
						NOT = {
							tag = event_target:marked_country
							has_war_with = event_target:marked_country
						}
						is_subject = no
					}
				}
			}
			remove_puppet_click_enabled = {
				has_event_target = marked_country
				event_target:marked_country = { is_subject = yes }
			}
			add_faction_click_enabled = {
				has_event_target = marked_country
				OR = {
					AND = {
						event_target:marked_country = {
							OR = {
								is_subject = no
								THIS = {
									owner = { has_subject = event_target:marked_country }
								}
							}
						}
						THIS = {
							owner = {
								NOT = {
									tag = event_target:marked_country
									is_in_faction_with = event_target:marked_country
									has_war_with = event_target:marked_country
								}
								is_in_faction = yes
							}
						}
					}
					event_target:marked_country = {
						is_in_faction = yes
						is_faction_leader = no
						is_subject = no
					}
				}
			}
			remove_faction_click_enabled = {
				has_event_target = marked_country
				event_target:marked_country = {
					is_subject = no
					is_in_faction = yes
				}
			}
			add_peace_click_enabled = {
				has_event_target = marked_country
				event_target:marked_country = { has_war = yes }
			}
			add_war_click_enabled = {
				has_event_target = marked_country
				THIS = {
					owner = {
						event_target:marked_country = { can_declare_war_on = PREV }
					}
				}
			}
		}

		properties = {
			mark_state = {
				image = "[GetMarkIcon]"
			}
			mark_country = {
				image = "[GetMarkCountryIcon]"
			}
		}
	}

	state_transfer_tool_shortcut = {
		context_type = player_context
		window_name = "state_transfer_tool_shortcut_container"

		ai_enabled = {
			always = no
		}

		visible = {
			OR = {
				is_debug = yes
				NOT = { has_game_rule = { rule = stt_options option = DISABLED } }
			}
		}

		effects = {
			tool_shortcut_click = {
				if = {
					limit = { has_global_flag = transfer_enabled }
					clr_global_flag = transfer_enabled
				}
				else = {
					set_global_flag = transfer_enabled
				}
				clear_variable = ROOT.update_stt_gui
			}
		}
	}

	state_transfer_tool_button= {
		context_type = player_context
		window_name = "state_transfer_tool_button_container"
		parent_window_token = selected_state_view
		dirty = ROOT.update_stt_gui

		ai_enabled = {
			always = no
		}

		visible = {
			OR = {
				NOT = { has_game_rule = { rule = stt_options option = DISABLED } }
				has_global_flag = stt_button_enabled
			}
		}

		effects = {
			stt_menu_button_click = {
				if = {
					limit = { has_global_flag = transfer_enabled }
					clr_global_flag = transfer_enabled
				}
				else = {
					set_global_flag = transfer_enabled
				}
				clear_variable = ROOT.update_stt_gui
			}
		}
	}
}

