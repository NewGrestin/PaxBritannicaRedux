###########################
# Annexation Events concerning Europe
###########################
# By lots of folks
# Converted from on_actions to decisions by Rylock and Dr_Njitram
# Any new post-annexation events need to have their triggers in the KR_on_actions file
###########################
###########################
# Thanks KR ;) - Pax Team
###########################

## the bottom table of context and other events need to be adjusted to Pax - Lexus
## i left one event as example for the rest of the events, if you're not sure check out KR code

# Table of Contents
#	No specific order but please keep events in the order as belowe
#
# Europe
#	France
#		Occitania/Southern France
#		Burgundy
#		Normandy
#		Brittany
#		Picardy
#		Pas de Calais
#		Aquitanie
#		Seine-Maritime
#		Moselle
#		Savoy
#		Nauchatel
#			Prussia (+ East & West Prussia)
#			Posen
#			Masuria
#			Memel
#			Upper Silesia
#			Bavaria
#		Poland
#			Bialystok
#		UBD
#			Estonia
#			Latvia
#		Lithuania
#			Vilnius
#		Austria
#			Austria proper
#			Bohemia
#			Galicia
#				Bukovina
#			Hungary
#				Slovakia
#				Transcarpathia
#				Transylvania
#				West Banat
#				Vojvodina
#				Burgenland
#			Croatia
#				Dalmatia
#				Istria
#			Triest
#			Slovenia
#			Trentino
#		Switzerland
#			Romandy
#			Ticino
#
#	Western Europe
#		France
#			Brittany
#			Pas-de-Calais
#		Britain
#			Scotland
#			Wales
#		Ireland
#		Netherlands
#		Belgium
#			Wallonia
#
#	Northern Europe
#		Denmark
#			Iceland
#			Greenland
#		Norway
#		Sweden
#			Aland
#		Finland
#			Karelia
#
#	Eastern Europe
#		Ukraine
#			Brest
#		White Ruthenia
#			Eastern White Ruth.
#		European Russia
#			Dvinsk
#			Siberia
#
#	Southeastern Europe
#		Albania
#		Montenegro
#		Bosnia
#		Kosovo
#		Serbia
#			Nis
#			Macedonia
#		Romania
#		Bulgaria
#		Constantinople
#		Greece
#			Thessaloniki
#			Keraferia
#			Northern Epirus
#
#	Southern Europe
#		Spain
#			Galicia
#			Euskadi
#			Catalonia
#		Portugal
#		Southern France
#		Corsica
#		Italy
#			Aosta
#			Piedmont
#			Lombardy
#			Venetia
#			Emilia
#			Tuscany
#			Central Italy
#			Rome
#			Southern Italy
#			Sardinia
#		Malta

add_namespace = annexation

#####################################
##   C E N T R A L   E U R O P E   ##
#####################################


country_event = { #Fate of France
	id = annexation.1001
	title = annexation_france
	desc = annexation_france_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		29 = { retain_state = yes } #Pas-de-Calais
		17 = { retain_state = yes } #Meurthe
		31 = { retain_state = yes } #Roussillon
		735 = { retain_state = yes } #Savoy
		831 = { retain_state = yes } #Nice
		832 = { retain_state = yes } #Upper Savoy
		841 = { retain_state = yes } #Apurdi
		972 = { retain_state = yes } #Nauchatel
		1206 = { retain_state = yes } #Moselle
		1207 = { retain_state = yes } #Sedan
		27 = { retain_state = yes } #Bourgogne
		18 = { retain_state = yes } #Champagne
		685 = { retain_state = yes } #Champagne-Ardenne
		22 = { retain_state = yes } #Languedoc
		1205 = { retain_state = yes } #Ardeche
		21 = { retain_state = yes } #Provence
		32 = { retain_state = yes } #Alpes
		809 = { retain_state = yes } #Franche-Comt√©
		20 = { retain_state = yes } #Rhone
		26 = { retain_state = yes } #Auvergne
		1203 = { retain_state = yes } #Ain
		557 = { retain_state = yes } #Midi Pyrenees
		1202 = { retain_state = yes } #Garonne
		25 = { retain_state = yes } #Limousin
		15 = { retain_state = yes } #Normandy
		1204 = { retain_state = yes } #Seine-Maritime
	}

	option = { #Release France Whole
		log = "[GetLogInfo]: event annex.1001 option annexation.1001.a"
		name = annexation.1001.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		if = {
			limit = { country_exists = FRA }
			custom_effect_tooltip = FRA_puppet_tooltip
		}
		else = {
			set_temp_variable = { tag_to_release = FRA }
			release_targeted_tag = yes
		}
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			FRA = {
				set_cosmetic_tag = FRA_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			FRA = {
				set_cosmetic_tag = FRA_Occupied_Republic
			}
		}
	}

	option = { #Split Up France
		log = "[GetLogInfo]: event annex.1001 option annexation.1001.b"
		name = annexation.1001.b
		trigger = {
			is_subject = no
		}

		ai_chance = { base = 0 }

		set_temp_variable = { tag_to_release = FRA }

		set_global_flag = PB_France_Delenda_Est

		custom_effect_tooltip = annexations_country_to_be_divided_tt

		if = {
			limit = { country_exists = FRA }
			custom_effect_tooltip = FRA_puppet_tooltip
		}
		else = {
			set_temp_variable = { tag_to_release = FRA }
			release_targeted_tag = yes
		}
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			FRA = {
				set_cosmetic_tag = FRA_Occupied_Monarchy_Split
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			FRA = {
				set_cosmetic_tag = FRA_Occupied_Republic_Split
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1001 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1001 option annexation.integration"
		name = annexation.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1001 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Occitania
	id = annexation.1002
	title = annexation_occitania
	desc = annexation_occitania_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				FRA = {
					ROOT_can_grant_land = yes
				}
			}
			FRA = { save_event_target_as = france }
		}
	}

	option = { #Liberate Occitania
		log = "[GetLogInfo]: event annexation.1002 option annexation.1002.a"
		name = annexation.1002.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = OCT }
		1203 = { remove_claim_and_add_core_of_target = yes } 
		32 = { remove_claim_and_add_core_of_target = yes } 
		21 = { remove_claim_and_add_core_of_target = yes } 
		1205 = { remove_claim_and_add_core_of_target = yes } 
		26 = { remove_claim_and_add_core_of_target = yes } 
		22 = { remove_claim_and_add_core_of_target = yes } 
		25 = { remove_claim_and_add_core_of_target = yes } 
		1202 = { remove_claim_and_add_core_of_target = yes } 
		31 = { remove_claim_and_add_core_of_target = yes } 
		557 = { remove_claim_and_add_core_of_target = yes } 
		20 = { remove_claim_and_add_core_of_target = yes } 
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #give to France
		log = "[GetLogInfo]: event annexation.1002 option annexation.give_to_france"
		name = annexation.give_to_france
		trigger = {
			has_event_target = france
			NOT = {
				has_global_flag = PB_France_Delenda_Est
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		1203 = { transfer_if_owned = yes } 
		32 = { transfer_if_owned = yes } 
		21 = { transfer_if_owned = yes } 
		1205 = { transfer_if_owned = yes } 
		26 = { transfer_if_owned = yes } 
		22 = { transfer_if_owned = yes } 
		25 = { transfer_if_owned = yes } 
		1202 = { transfer_if_owned = yes } 
		31 = { transfer_if_owned = yes } 
		557 = { transfer_if_owned = yes } 
		20 = { transfer_if_owned = yes } 
		recheck_annexations = yes
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annexation.1002 option annexation.give_to_overlord"
		name = annexation.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		1203 = { transfer_if_owned = yes } 
		32 = { transfer_if_owned = yes } 
		21 = { transfer_if_owned = yes } 
		1205 = { transfer_if_owned = yes } 
		26 = { transfer_if_owned = yes } 
		22 = { transfer_if_owned = yes } 
		25 = { transfer_if_owned = yes } 
		1202 = { transfer_if_owned = yes } 
		31 = { transfer_if_owned = yes } 
		557 = { transfer_if_owned = yes } 
		20 = { transfer_if_owned = yes } 
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annexation.1002 option annexation.integration"
		name = annexation.integration
		trigger = {
			annexations_can_annex = yes
		}
		1203 = { add_claim_of_ROOT = yes } 
		32 = { add_claim_of_ROOT = yes } 
		21 = { add_claim_of_ROOT = yes } 
		1205 = { add_claim_of_ROOT = yes } 
		26 = { add_claim_of_ROOT = yes } 
		22 = { add_claim_of_ROOT = yes } 
		25 = { add_claim_of_ROOT = yes } 
		1202 = { add_claim_of_ROOT = yes } 
		31 = { add_claim_of_ROOT = yes } 
		557 = { add_claim_of_ROOT = yes } 
		20 = { add_claim_of_ROOT = yes } 
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1002 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Burgundy
	id = annexation.1003
	title = annexation_burgundy
	desc = annexation_burgundy_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				FRA = {
					ROOT_can_grant_land = yes
				}
			}
			FRA = { save_event_target_as = france }
		}
	}

	option = { #Liberate Burgundy
		log = "[GetLogInfo]: event annexation.1003 option annexation.1003.a"
		name = annexation.1003.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = BRG }
		17 = { remove_claim_and_add_core_of_target = yes } #Meurthe
		18 = { remove_claim_and_add_core_of_target = yes } #Champagne
		27 = { remove_claim_and_add_core_of_target = yes } #Bourgogne
		685 = { remove_claim_and_add_core_of_target = yes } #Champagne-Ardenne
		809 = { remove_claim_and_add_core_of_target = yes } #Franche-Comte
		1207 = { remove_claim_and_add_core_of_target = yes } #Sedan
		release_targeted_tag = yes
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			BRG = {
				set_cosmetic_tag = BRG_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			BRG = {
				set_cosmetic_tag = BRG_Occupied_Republic
			}
		}
	}

	option = { #give to France
		log = "[GetLogInfo]: event annexation.1003 option annexation.give_to_france"
		name = annexation.give_to_france
		trigger = {
			has_event_target = france
			NOT = {
				has_global_flag = PB_France_Delenda_Est
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		17 = { transfer_if_owned = yes } #Meurthe
		18 = { transfer_if_owned = yes } #Champagne
		27 = { transfer_if_owned = yes } #Bourgogne
		685 = { transfer_if_owned = yes } #Champagne-Ardenne
		809 = { transfer_if_owned = yes } #Franche-Comte
		recheck_annexations = yes
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annexation.1003 option annexation.give_to_overlord"
		name = annexation.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		17 = { transfer_if_owned = yes } #Meurthe
		18 = { transfer_if_owned = yes } #Champagne
		27 = { transfer_if_owned = yes } #Bourgogne
		685 = { transfer_if_owned = yes } #Champagne-Ardenne
		809 = { transfer_if_owned = yes } #Franche-Comte
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annexation.1003 option annexation.integration"
		name = annexation.integration
		trigger = {
			annexations_can_annex = yes
		}
		17 = { add_claim_of_ROOT = yes } #Meurthe
		18 = { add_claim_of_ROOT = yes } #Champagne
		27 = { add_claim_of_ROOT = yes } #Bourgogne
		685 = { add_claim_of_ROOT = yes } #Champagne-Ardenne
		809 = { add_claim_of_ROOT = yes } #Franche-Comte
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1003 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Normandy
	id = annexation.1004
	title = annexation_Normandy
	desc = annexation_Normandy_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				FRA = {
					ROOT_can_grant_land = yes
				}
			}
			FRA = { save_event_target_as = france }
		}
	}

	option = { #Liberate Normandy
		log = "[GetLogInfo]: event annexation.1004 option annexation.1004.a"
		name = annexation.1004.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = NRM }
		15 = { remove_claim_and_add_core_of_target = yes } 
		release_targeted_tag = yes
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			NRM = {
				set_cosmetic_tag = NRM_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			NRM = {
				set_cosmetic_tag = NRM_Occupied_Republic
			}
		}
	}

	option = { #give to France
		log = "[GetLogInfo]: event annexation.1004 option annexation.give_to_france"
		name = annexation.give_to_france
		trigger = {
			has_event_target = france
			NOT = {
				has_global_flag = PB_France_Delenda_Est
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		15 = { transfer_if_owned = yes } 
		recheck_annexations = yes
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annexation.1004 option annexation.give_to_overlord"
		name = annexation.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		15 = { transfer_if_owned = yes } 
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annexation.1004 option annexation.integration"
		name = annexation.integration
		trigger = {
			annexations_can_annex = yes
		}
		15 = { add_claim_of_ROOT = yes } 
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1004 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Brittany
	id = annexation.1005
	title = annexation_brittany
	desc = annexation_brittany_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				FRA = {
					ROOT_can_grant_land = yes
				}
			}
			FRA = { save_event_target_as = france }
		}
	}

	option = { #Liberate Brittany
		log = "[GetLogInfo]: event annexation.1005 option annexation.1005.a"
		name = annexation.1005.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = BRT }
		14 = { remove_claim_and_add_core_of_target = yes } 
		release_targeted_tag = yes
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			BRT = {
				set_cosmetic_tag = BRT_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			BRT = {
				set_cosmetic_tag = BRT_Occupied_Republic
			}
		}
	}

	option = { #give to France
		log = "[GetLogInfo]: event annexation.1005 option annexation.give_to_france"
		name = annexation.give_to_france
		trigger = {
			has_event_target = france
			NOT = {
				has_global_flag = PB_France_Delenda_Est
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		14 = { transfer_if_owned = yes } 
		recheck_annexations = yes
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annexation.1005 option annexation.give_to_overlord"
		name = annexation.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		14 = { transfer_if_owned = yes } 
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annexation.1005 option annexation.integration"
		name = annexation.integration
		trigger = {
			annexations_can_annex = yes
		}
		14 = { add_claim_of_ROOT = yes } 
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1005 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

#
#country_event = { #Fate of Picardy
#	id = annexation.1006
#	title = annexation_picardy
#	desc = annexation_picardy_desc
#	picture = GFX_report_PB_Peace_Deals_Europe
#
#	is_triggered_only = yes
#}
#

country_event = { #Fate of Pas-de-Calais
	id = annexation.1007
	title = annexation_pasdecalais
	desc = annexation_pasdecalais_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #give to Wallonia
		log = "[GetLogInfo]: event annexation.1007 option annexation.give_to_france"
		name = annexation.give_to_wallonia
		trigger = {
			WLA = {
				exists = yes
				owns_state = 855
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:wallonia = { is_subject = yes }
			}
		}
		29 = { transfer_state_to = WLA } 
		recheck_annexations = yes
	}

	option = { #give to France
		log = "[GetLogInfo]: event annexation.1007 option annexation.give_to_france"
		name = annexation.give_to_france
		trigger = {
			FRA = {
				exists = yes
				owns_state = 785
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		29 = { transfer_state_to = FRA }
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1007 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

#
#country_event = { #Fate of Aquitaine
#	id = annexation.1008
#	title = annexation_aquitaine
#	desc = annexation_aquitaine_desc
#	picture = GFX_report_PB_Peace_Deals_Europe
#
#	is_triggered_only = yes
#}
#

country_event = { #Fate of Seine-Maritime
	id = annexation.1009
	title = annexation_seinemaritime
	desc = annexation_seinemaritime_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #give to Normandy
		log = "[GetLogInfo]: event annexation.1009 option annexation.give_to_france"
		name = annexation.give_to_normandy
		trigger = {
			NRM = {
				exists = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
		}
		1204 = { transfer_state_to = NRM } 
		recheck_annexations = yes
	}

	option = { #give to France
		log = "[GetLogInfo]: event annexation.1009 option annexation.give_to_france"
		name = annexation.give_to_france
		trigger = {
			FRA = {
				exists = yes
				owns_state = 16
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		1204 = { transfer_state_to = FRA }
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1009 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Moselle
	id = annexation.1010
	title = annexation_moselle
	desc = annexation_moselle_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #give to Burgundy
		log = "[GetLogInfo]: event annexation.1010 option annexation.give_to_france"
		name = annexation.give_to_burgundy
		trigger = {
			BRG = {
				exists = yes
				owns_state = 17
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
		}
		1206 = { transfer_state_to = BRG } 
		recheck_annexations = yes
	}

	option = { #give to France
		log = "[GetLogInfo]: event annexation.1010 option annexation.give_to_france"
		name = annexation.give_to_france
		trigger = {
			FRA = {
				exists = yes
				owns_state = 17
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		1206 = { transfer_state_to = FRA }
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1010 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Savoy
	id = annexation.1011
	title = annexation_savoy
	desc = annexation_savoy_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #give to Occitania
		log = "[GetLogInfo]: event annexation.1011 option annexation.give_to_france"
		name = annexation.give_to_occitania
		trigger = {
			OCT = {
				exists = yes
				owns_state = 32
				owns_state = 21
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
		}
		735 = { transfer_state_to = OCT } 
		recheck_annexations = yes
	}

	option = { #give to France
		log = "[GetLogInfo]: event annexation.1011 option annexation.give_to_france"
		name = annexation.give_to_france
		trigger = {
			FRA = {
				exists = yes
				owns_state = 32
				owns_state = 21
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
		}
		735 = { transfer_state_to = FRA }
		recheck_annexations = yes
	}

	option = { #give to Italy
		log = "[GetLogInfo]: event annexation.1011 option annexation.give_to_france"
		name = annexation.give_to_italy
		trigger = {
			OR = {
				ITA = {
					exists = yes
					owns_state = 158
				}
				IST = {
					exists = yes
					owns_state = 158
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
		}
		if = {
			limit = {
				IST = {
					exists = yes
					owns_state = 158
				}
			}
			735 = { transfer_state_to = IST } 
		}
		if = {
			limit = {
				ITA = {
					exists = yes
					owns_state = 158
				}
			}
			735 = { transfer_state_to = ITA } 
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1011 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Nauchatel
	id = annexation.1012
	title = annexation_nauchatel
	desc = annexation_nauchatel_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #give to Burgundy
		log = "[GetLogInfo]: event annexation.1012 option annexation.give_to_france"
		name = annexation.give_to_wallonia
		trigger = {
			BRG = {
				exists = yes
				owns_state = 17
				owns_state = 809
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:wallonia = { is_subject = yes }
			}
		}
		972 = { transfer_state_to = BRG } 
		recheck_annexations = yes
	}

	option = { #give to France
		log = "[GetLogInfo]: event annexation.1012 option annexation.give_to_france"
		name = annexation.give_to_france
		trigger = {
			FRA = {
				exists = yes
				owns_state = 17
				owns_state = 809
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		972 = { transfer_state_to = FRA }
		recheck_annexations = yes
	}

	option = { #give to Switzerland
		log = "[GetLogInfo]: event annexation.1012 option annexation.give_to_france"
		name = annexation.give_to_switzerland
		trigger = {
			SWI = {
				exists = yes
				owns_state = 940
			}
			NOT = {
				SWI = {
					owns_state = 972
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		972 = { transfer_state_to = SWI }
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1012 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Britain
	id = annexation.1013
	title = annexation_england
	desc = annexation_england_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		1201 = { retain_state = yes } 
		122 = { retain_state = yes } 
		133 = { retain_state = yes }
		121 = { retain_state = yes }
		136 = { retain_state = yes } 
		120 = { retain_state = yes }
		1198 = { retain_state = yes }
		118 = { retain_state = yes }
		447 = { retain_state = yes }
		331 = { retain_state = yes }
		332 = { retain_state = yes }
		1218 = { retain_state = yes }
		1219 = { retain_state = yes }
		691 = { retain_state = yes }
		692 = { retain_state = yes }
		693 = { retain_state = yes }
		694 = { retain_state = yes }
		696 = { retain_state = yes }
		308 = { retain_state = yes }
		698 = { retain_state = yes }
		147 = { retain_state = yes }
		311 = { retain_state = yes }
		701 = { retain_state = yes }
		183 = { retain_state = yes }
		703 = { retain_state = yes }
		704 = { retain_state = yes }
		1076 = { retain_state = yes }
		783 = { retain_state = yes }
		708 = { retain_state = yes }
		1330 = { retain_state = yes }
		543 = { retain_state = yes }
		1329 = { retain_state = yes }
		706 = { retain_state = yes }
		1071 = { retain_state = yes }
		709 = { retain_state = yes }
		710 = { retain_state = yes }
		712 = { retain_state = yes }
		711 = { retain_state = yes }
		1383 = { retain_state = yes }
		524 = { retain_state = yes }
		526 = { retain_state = yes }
		1069 = { retain_state = yes }
		1067 = { retain_state = yes }
		645 = { retain_state = yes }
		648 = { retain_state = yes }
		632 = { retain_state = yes }
		643 = { retain_state = yes }
		642 = { retain_state = yes }
		1057 = { retain_state = yes }
		1056 = { retain_state = yes }
		641 = { retain_state = yes }
		1054 = { retain_state = yes }
		1055 = { retain_state = yes }
		270 = { retain_state = yes }
		727 = { retain_state = yes }
		973 = { retain_state = yes }
	}

	option = { #Keep Great Britain Unified
		log = "[GetLogInfo]: event annex.1013 option annexation.1013.a"
		name = annexation.1013.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		if = {
			limit = { country_exists = ENG }
			custom_effect_tooltip = ENG_puppet_tooltip
		}
		else = {
			set_temp_variable = { tag_to_release = ENG }
			release_targeted_tag = yes
		}
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			ENG = {
				set_cosmetic_tag = ENG_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			ENG = {
				set_cosmetic_tag = ENG_Occupied_Republic
			}
		}
	}

	option = { #Split Up Great Britain
		log = "[GetLogInfo]: event annex.1013 option annexation.1013.b"
		name = annexation.1013.b
		trigger = {
			is_subject = no
		}

		custom_effect_tooltip = annexations_country_to_be_divided_tt

		set_global_flag = PB_ENG_Divided_via_Peace

		ai_chance = { base = 0 }

		set_temp_variable = { tag_to_release = ENG }

		if = {
			limit = { country_exists = ENG }
			custom_effect_tooltip = ENG_puppet_tooltip
		}
		else = {
			set_temp_variable = { tag_to_release = ENG }
			release_targeted_tag = yes
		}
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			ENG = {
				set_cosmetic_tag = ENG_Occupied_Monarchy_Split
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			ENG = {
				set_cosmetic_tag = ENG_Occupied_Republic_Split
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1013 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1013 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1013 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Wales
	id = annexation.1014
	title = annexation_wales
	desc = annexation_wales_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ENG = {
					ROOT_can_grant_land = yes
				}
			}
			ENG = { save_event_target_as = england }
		}
	}

	option = { #Liberate Wales
		log = "[GetLogInfo]: event annex.1014 option annexation.1014.a"
		name = annexation.1014.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = WLS }
		122 = { remove_claim_and_add_core_of_target = yes } #Cardiff
		1201 = { remove_claim_and_add_core_of_target = yes } #Northern Wales
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			WLS = {
				set_cosmetic_tag = WLS_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			WLS = {
				drop_cosmetic_tag = yes
			}
		}

		recheck_annexations = yes
	}

	option = { #Give Wales to Britain
		log = "[GetLogInfo]: event annex.1014 option annexation.1014.b"
		name = annexation.1014.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_ENG_Divided_via_Peace
			}
		}

		ai_chance = { base = 0 }

		ENG = {
			transfer_state = 122
			transfer_state = 1201
		}

		if = {
			limit = {
				ENG = {
					has_cosmetic_tag = ENG_Occupied_Monarchy
				}
			}
			ENG = {
				set_cosmetic_tag = ENG_Occupied_Monarchy_with_Wales
			}
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1014 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1014 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1014 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Scotland
	id = annexation.1015
	title = annexation_scotland
	desc = annexation_scotland_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ENG = {
					ROOT_can_grant_land = yes
				}
			}
			ENG = { save_event_target_as = england }
		}
	}

	option = { #Liberate Scotland
		log = "[GetLogInfo]: event annex.1015 option annexation.1015.a"
		name = annexation.1015.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = SCO }
		133 = { remove_claim_and_add_core_of_target = yes } 
		121 = { remove_claim_and_add_core_of_target = yes }
		136 = { remove_claim_and_add_core_of_target = yes } 
		120 = { remove_claim_and_add_core_of_target = yes }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SCO = {
				set_cosmetic_tag = SCO_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SCO = {
				drop_cosmetic_tag = yes
			}
		}

		recheck_annexations = yes
	}

	option = { #Split Up Great Britain
		log = "[GetLogInfo]: event annex.1015 option annexation.1015.b"
		name = annexation.1015.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_ENG_Divided_via_Peace
			}
		}

		ai_chance = { base = 0 }

		ENG = {
			transfer_state = 133
			transfer_state = 121
			transfer_state = 136
			transfer_state = 120
		}

		if = {
			limit = {
				ENG = {
					has_cosmetic_tag = ENG_Occupied_Monarchy
				}
			}
			ENG = {
				set_cosmetic_tag = ENG_Occupied_Monarchy_with_Wales
			}
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1015 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1015 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1015 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Portugal
	id = annexation.1016
	title = annexation_portugal
	desc = annexation_portugal_desc
	picture = GFX_report_event_Generic_Art_Gallery

	is_triggered_only = yes

	immediate = {

		171 = { retain_state = yes } #Galicia

		hidden_effect = {
			#if = {
			#	limit = { NOT = { country_exists = POR } }
			#	every_state = {
			#		if = {
			#			limit = { is_portugal = no }
			#			remove_core_of = POR
			#		}
			#		else = {
			#			add_core_of = POR
			#		}
			#		remove_claim_by = POR
			#	}
			#	POR = { POR_remove_monarchy = yes }
			#}
			if = {
				limit = {
					original_tag = SPA
					#has_socialist_government = yes
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					SPA = {
						ROOT_can_grant_land = yes
						#OR = {
						#	is_subject = no
						#	has_socialist_government = yes
						#}
					}
				}
				SPA = { save_event_target_as = spain }
			}
			if = {
				limit = {
					PEF = {
						ROOT_can_grant_land = yes
						#OR = {
						#	is_subject = no
						#	has_socialist_government = yes
						#}
					}
				}
				PEF = { save_event_target_as = portuguese_monarchy }
			}
		}
	}

	option = { #Liberate a republican Portugal - as a puppet
		log = "[GetLogInfo]: event annexation.1016 option annexation.1016.a"
		name = annexation.1016.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = -50
				annexations_can_annex = yes
			}
			#modifier = {
			#	factor = 0
			#	NOT = { country_exists = POR }
			#	OR = {
			#		is_monarchy = yes
			#		is_german_tag = yes
			#	}
			#}
			#modifier = {
			#	factor = 0
			#	is_ally_with = event_target:spain
			#	OR = {
			#		is_major = no
			#		has_socialist_government = yes
			#	}
			#}
		}
		if = {
			limit = { country_exists = POR }
			custom_effect_tooltip = POR_puppet_tooltip
			
		}
		else = {
			set_temp_variable = { tag_to_release = POR }
			release_targeted_tag = yes
		}
		recheck_annexations = yes
	}

	option = { #Restore the Portuguese monarchy/empire as a puppet
		log = "[GetLogInfo]: event annexation.1016 option annexation.1016.b"
		name = annexation.1016.b
		trigger = {
			is_subject = no
			NOT = { country_exists = PEF }
		}
		ai_chance = {
			base = 50
			#modifier = {
			#	factor = 25
			#	country_exists = PEF
			#}
		}
		set_temp_variable = { tag_to_release = PEF }
		release_targeted_tag = yes

		#var:tag_to_release = { POR_monarchy_setup = yes }
		recheck_annexations = yes
	}

	option = { #Give it to the Portuguese monarchy/empire
		log = "[GetLogInfo]: event annexation.1016 option annexation.1016.c"
		name = annexation.1016.c
		trigger = {
			has_event_target = portuguese_monarchy
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 25
				country_exists = PEF
			}
		}

		set_temp_variable = { tag_to_release = event_target:portuguese_monarchy }
		POR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
		#recheck_annexations = yes

		#var:tag_to_release = { POR_monarchy_setup = yes }
		recheck_annexations = yes
	}


	option = { #give to Spain
		log = "[GetLogInfo]: event annexation.1016 option annexation.give_to_spain"
		name = annexation.give_to_spain
		trigger = {
			has_event_target = spain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:spain }
		POR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
		recheck_annexations = yes
	}

	option = { #Integrate - for Spain - lets see if i should do pef
		log = "[GetLogInfo]: event annexation.1016 option annexation.integration"
		name = annexation.integration
		trigger = {
			annexations_can_annex = yes
		}
		POR = { add_claim_of_ROOT_on_valid_cores = yes }
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1016 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Galicia
	id = annexation.1017
	title = annexation_spanish_galicia
	desc = annexation_spanish_galicia_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {

		if = {
			limit = {
				OR = {
					174 = { is_claim_or_core_of_ROOT = yes } #Le√≥n
					793 = { is_claim_or_core_of_ROOT = yes } #Asturias
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				174 = { #Le√≥n
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:174.owner = { save_event_target_as = spain_leon }
		}
		if = {
			limit = {
				1193 = { #Asturias
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:spain_leon }
					}
				}
			}
			var:1193.owner = { save_event_target_as = spain_asturias }
		}
		if = {
			limit = {
				180 = { #Porto
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:180.owner = { save_event_target_as = porto_owner }
		}
	}

	#option = { #puppet
	#	log = "[GetLogInfo]: event annex.1085 option annex.1085.a"
	#	name =annexation.1017.a
	#	trigger = {
	#		is_subject = no
	#	}
	#	ai_chance = { base = 0 }
	#	set_temp_variable = { tag_to_release = GLC }
	#	release_targeted_tag = yes
	#	recheck_annexations = yes
	#}

	option = { #give to Spanish owner of Le√≥n
		log = "[GetLogInfo]: event annexation.1017 option annexation.1017.b"
		name = annexation.1017.b
		trigger = {
			has_event_target = spain_leon
		}
		ai_chance = {
			base = 40
			#modifier = {
			#	factor = 0
			#	annexations_can_annex = yes
			#}
			#modifier = {
			#	factor = 0
			#	NOT = { is_ally_with = event_target:spain_leon }
			#	OR = {
			#		is_ally_with = event_target:spain_asturias
			#		is_ally_with = event_target:portugal
			#	}
			#}
			#modifier = {
			#	factor = 0.1
			#	event_target:spain_leon = { is_subject = yes }
			#}
		}
		set_temp_variable = { tag_to_release = event_target:spain_leon }
		171 = { transfer_state_and_notify = yes }
		transfer_targeted_territory = yes
		recheck_annexations = yes
	}

	option = { #give to Spanish owner of Asturias
		log = "[GetLogInfo]: event annexation.1017 option annexation.1017.c"
		name = annexation.1017.c
		trigger = {
			has_event_target = spain_asturias
		}
		ai_chance = {
			base = 30
			#modifier = {
			#	factor = 0
			#	annexations_can_annex = yes
			#}
			#modifier = {
			#	factor = 0
			#	NOT = { is_ally_with = event_target:spain_asturias }
			#	OR = {
			#		is_ally_with = event_target:spain_leon
			#		is_ally_with = event_target:portugal
			#	}
			#}
			#modifier = {
			#	factor = 0.1
			#	event_target:spain_asturias = { is_subject = yes }
			#}
		}
		set_temp_variable = { tag_to_release = event_target:spain_asturias }
		171 = { transfer_state_and_notify = yes }
		transfer_targeted_territory = yes
		recheck_annexations = yes
	}

	option = { #give to Spanish owner of Porto
		log = "[GetLogInfo]: event annexation.1017 option annexation.1017.d"
		name = annexation.1017.d
		trigger = {
			has_event_target = porto_owner
		}
		ai_chance = {
			base = 30
			#modifier = {
			#	factor = 0
			#	annexations_can_annex = yes
			#}
			#modifier = {
			#	factor = 0
			#	NOT = { is_ally_with = event_target:spain_asturias }
			#	OR = {
			#		is_ally_with = event_target:spain_leon
			#		is_ally_with = event_target:portugal
			#	}
			#}
			#modifier = {
			#	factor = 0.1
			#	event_target:spain_asturias = { is_subject = yes }
			#}
		}
		set_temp_variable = { tag_to_release = event_target:porto_owner}
		171 = { transfer_state_and_notify = yes }
		transfer_targeted_territory = yes
		recheck_annexations = yes
	}

	#option = { #Give to overlord
	#	log = "[GetLogInfo]: event annex.1085 option annex.give_to_overlord"
	#	name = annex.give_to_overlord
	#	trigger = {
	#		annexations_should_give_lands_to_overlord = yes
	#	}
	#	set_temp_variable = { tag_to_release = overlord }
	#	GLC = { set_transfer_target_cores = yes }
	#	transfer_targeted_territory = yes
	#	recheck_annexations = yes
	#}

	option = { #Integrate
		log = "[GetLogInfo]: event annexation.1017 option annexation.integration"
		name = annexation.integration
		trigger = {
			annexations_can_annex = yes
		}
		#GLC = { add_claim_of_ROOT_on_valid_cores = yes }
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1017 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Spain
	id = annexation.1018
	title = annexation_spain
	desc = annexation_spain_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		165 = { retain_state = yes }
		173 = { retain_state = yes }
		169 = { retain_state = yes } 
		1196 = { retain_state = yes } 
		177 = { retain_state = yes } 
		701 = { retain_state = yes } 
	}

	option = { #Release Spain Whole
		log = "[GetLogInfo]: event annex.1018 option annexation.1018.a"
		name = annexation.1018.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		if = {
			limit = { country_exists = SPR }
			custom_effect_tooltip = FRA_puppet_tooltip
		}
		else = {
			set_temp_variable = { tag_to_release = SPR }
			release_targeted_tag = yes
		}
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SPR = {
				set_cosmetic_tag = SPR_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SPR = {
				set_cosmetic_tag = SPR_Occupied_Republic
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1018 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1018 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1018 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Catalonia
	id = annexation.1019
	title = annexation_spain
	desc = annexation_spain_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				SPR = {
					ROOT_can_grant_land = yes
				}
			}
			SPR = { save_event_target_as = spain }
		}
	}

	option = { #Release Independent Catalonia
		log = "[GetLogInfo]: event annex.1019 option annexation.1019.a"
		name = annexation.1019.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = CAT }
		165 = { remove_claim_and_add_core_of_target = yes }
		release_targeted_tag = yes
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
					NOT = {
						OR = {
							original_tag = ENG
							original_tag = GER
						}
					}
				}
			}
			CAT = {
				set_cosmetic_tag = CAT_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
					NOT = {
						OR = {
							original_tag = FRA
						}
					}
				}
			}
			CAT = {
				drop_cosmetic_tag = yes
			}
		}
	}

	option = { #Grant it to Spain
		log = "[GetLogInfo]: event annex.1019 option annexation.1019.b"
		name = annexation.1019.b
		trigger = {
			is_subject = no
		}

		ai_chance = { base = 0 }

		set_global_flag = PB_GLOBAL_Spain_Divided

		SPR = {
			transfer_state = 165
		}
		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1019 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1019 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1019 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Andalusia
	id = annexation.1020
	title = annexation_spain
	desc = annexation_spain_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				SPR = {
					ROOT_can_grant_land = yes
				}
			}
			SPR = { save_event_target_as = spain }
		}
	}

	option = { #Release Independent Andalusia
		log = "[GetLogInfo]: event annex.1020 option annexation.1020.a"
		name = annexation.1020.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = ADL }
		173 = { remove_claim_and_add_core_of_target = yes }
		1196 = { remove_claim_and_add_core_of_target = yes }
		169 = { remove_claim_and_add_core_of_target = yes }
		release_targeted_tag = yes
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
					NOT = {
						OR = {
							original_tag = ENG
							original_tag = GER
						}
					}
				}
			}
			ADL = {
				set_cosmetic_tag = ADL_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
					NOT = {
						OR = {
							original_tag = FRA
						}
					}
				}
			}
			CAT = {
				drop_cosmetic_tag = yes
			}
		}
	}

	option = { #Grant it to Spain
		log = "[GetLogInfo]: event annex.1020 option annexation.1020.b"
		name = annexation.1020.b
		trigger = {
			is_subject = no
		}

		ai_chance = { base = 0 }

		set_global_flag = PB_GLOBAL_Spain_Divided

		SPR = {
			transfer_state = 173
			transfer_state = 1196
			transfer_state = 169
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1020 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1020 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1020 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of the Balerics
	id = annexation.1021
	title = annexation_balerics
	desc = annexation_balerics_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				SPR = {
					ROOT_can_grant_land = yes
				}
			}
			SPR = { save_event_target_as = spain }
		}
		if = {
			limit = {
				CAT = {
					ROOT_can_grant_land = yes
				}
			}
			CAT = { save_event_target_as = spain }
		}
	}

	option = { #Grant it to Spain
		log = "[GetLogInfo]: event annex.1021 option annexation.1021.a"
		name = annexation.1021.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		177 = { transfer_state_to = SPR }
	}

	option = { #Grant it to Catalonia
		log = "[GetLogInfo]: event annex.1021 option annexation.1021.b"
		name = annexation.1021.b
		trigger = {
			is_subject = no
		}

		ai_chance = { base = 0 }

		177 = { transfer_state_to = CAT }
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1021 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1021 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1021 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}


country_event = { #Fate of Switzerland
	id = annexation.1022
	title = annexation_switzerland
	desc = annexation_switzerland_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		1404 = { retain_state = yes }
		1403 = { retain_state = yes } 
	}

	option = { #Release Switzerland Whole
		log = "[GetLogInfo]: event annex.1022 option annexation.1022.a"
		name = annexation.1022.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		if = {
			limit = { country_exists = SWI }
			custom_effect_tooltip = FRA_puppet_tooltip
		}
		else = {
			set_temp_variable = { tag_to_release = SWI }
			release_targeted_tag = yes
		}
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SWI = {
				set_cosmetic_tag = SWI_Occupied_Monarchy
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1022 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1022 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1022 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Ticino
	id = annexation.1023
	title = annexation_ticino
	desc = annexation_ticino_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				SWI = {
					ROOT_can_grant_land = yes
				}
			}
			SWI = { save_event_target_as = switzerland }
		}
	}

	option = { #Return it to the Swiss
		log = "[GetLogInfo]: event annex.1023 option annexation.1023.a"
		name = annexation.1023.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SWI = {
			transfer_state = 1403
		}

		recheck_annexations = yes
	}

	option = { #Give it to Italy
		log = "[GetLogInfo]: event annex.1023 option annexation.1023.b"
		name = annexation.1023.b
		trigger = {
			is_subject = no
			OR = {
				ITA = {
					exists = yes
					owns_state = 159
					owns_state = 158
				}
				IST = {
					exists = yes
					owns_state = 159
					owns_state = 158
				}
			}
		}

		ai_chance = { base = 0 }

		if = {
			limit = {
				IST = {
					exists = yes
					owns_state = 159
					owns_state = 158
				}
			}
			1403 = { transfer_state_to = IST } 
		}
		if = {
			limit = {
				ITA = {
					exists = yes
					owns_state = 159
					owns_state = 158
				}
			}
			1403 = { transfer_state_to = ITA } 
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1023 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1023 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1023 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Valais
	id = annexation.1024
	title = annexation_valais
	desc = annexation_valais_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				SWI = {
					ROOT_can_grant_land = yes
				}
			}
			SWI = { save_event_target_as = switzerland }
		}
	}

	option = { #Return it to the Swiss
		log = "[GetLogInfo]: event annex.1024 option annexation.1024.a"
		name = annexation.1024.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SWI = {
			transfer_state = 1404
		}

		recheck_annexations = yes
	}

	option = { #Give it to Italy
		log = "[GetLogInfo]: event annex.1024 option annexation.1024.b"
		name = annexation.1024.b
		trigger = {
			is_subject = no
			OR = {
				ITA = {
					exists = yes
					owns_state = 158
				}
				IST = {
					exists = yes
					owns_state = 158
				}
			}
		}

		ai_chance = { base = 0 }

		if = {
			limit = {
				IST = {
					exists = yes
					owns_state = 158
				}
			}
			1404 = { transfer_state_to = IST } 
		}
		if = {
			limit = {
				ITA = {
					exists = yes
					owns_state = 158
				}
			}
			1404 = { transfer_state_to = ITA } 
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1024 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1024 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1024 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Wallonia
	id = annexation.1025
	title = annexation_wallonia
	desc = annexation_wallonia_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		855 = { retain_state = yes }
	}

	option = { #Release Wallonia
		log = "[GetLogInfo]: event annex.1025 option annexation.1025.a"
		name = annexation.1025.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		if = {
			limit = { country_exists = WLA }
			custom_effect_tooltip = FRA_puppet_tooltip
		}
		else = {
			set_temp_variable = { tag_to_release = WLA }
			release_targeted_tag = yes
		}
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			WLA = {
				set_cosmetic_tag = WLA_Occupied_Monarchy
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1025 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1025 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1025 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Calais Corridor
	id = annexation.1026
	title = annexation_calais_corridor
	desc = annexation_calais_corridor_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return it to Wallonia
		log = "[GetLogInfo]: event annex.1026 option annexation.1026.a"
		name = annexation.1026.a
		trigger = {
			is_subject = no
			WLA = {
				exists = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		WLA = {
			transfer_state = 855
		}
		recheck_annexations = yes
	}

	option = { #Return it to France
		log = "[GetLogInfo]: event annex.1026 option annexation.1026.b"
		name = annexation.1026.b
		trigger = {
			is_subject = no
			FRA = {
				exists = yes
			}
		}
		FRA = {
			transfer_state = 855
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1026 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1026 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Netherlands
	id = annexation.1027
	title = annexation_netherlands
	desc = annexation_netherlands_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		1163 = { retain_state = yes }
		1446 = { retain_state = yes }
		1073 = { retain_state = yes }
		707 = { retain_state = yes }
		422 = { retain_state = yes }
		6 = { retain_state = yes }
		1405 = { retain_state = yes }
	}

	option = { #Release Netherlands
		log = "[GetLogInfo]: event annex.1027 option annexation.1027.a"
		name = annexation.1027.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		if = {
			limit = { country_exists = HOL }
			custom_effect_tooltip = FRA_puppet_tooltip
		}
		else = {
			set_temp_variable = { tag_to_release = HOL }
			release_targeted_tag = yes
		}
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			HOL = {
				set_cosmetic_tag = HOL_Occupied_Monarchy
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1027 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1027 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1027 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Flanders
	id = annexation.1028
	title = annexation_flanders
	desc = annexation_flanders_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Flanders
		log = "[GetLogInfo]: event annex.1028 option annexation.1028.a"
		name = annexation.1028.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		if = {
			limit = { country_exists = FLA }
			custom_effect_tooltip = FRA_puppet_tooltip
		}
		else = {
			set_temp_variable = { tag_to_release = FLA }
			release_targeted_tag = yes
		}
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			FLA = {
				set_cosmetic_tag = FLA_Occupied_Monarchy
			}
		}
	}

	option = { #Return it to Netherlands
		log = "[GetLogInfo]: event annex.1028 option annexation.1028.a"
		name = annexation.1028.a
		trigger = {
			is_subject = no
			HOL = {
				exists = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		HOL = {
			transfer_state = 6
			transfer_state = 1405
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1028 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1028 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1028 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Italy
	id = annexation.1029
	title = annexation_italy
	desc = annexation_italy_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		114 = { retain_state = yes }#Sardinia
		2 = { retain_state = yes }#Latium
		157 = { retain_state = yes }#Marche
		1432 = { retain_state = yes }#Umbria
		162 = { retain_state = yes }#Tuscany
		161 = { retain_state = yes }#Romagna
		160 = { retain_state = yes }#Veneto
		159 = { retain_state = yes }#Lombardy
		835 = { retain_state = yes }#Modena
		834 = { retain_state = yes }#Parma
		1023 = { retain_state = yes }#Liguria
		158 = { retain_state = yes }#Piedmont
		832 = { retain_state = yes }#Upper Savoy
		831 = { retain_state = yes }#Nice
	}

	option = { #Release Italy Whole
		log = "[GetLogInfo]: event annex.1029 option annexation.1029.a"
		name = annexation.1029.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		if = {
			limit = { country_exists = ITA }
			custom_effect_tooltip = FRA_puppet_tooltip
		}
		else = {
			set_temp_variable = { tag_to_release = ITA }
			release_targeted_tag = yes
		}
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			ITA = {
				set_cosmetic_tag = ITA_Occupied_Republic
			}
		}
	}

	option = { #Split up Italy
		log = "[GetLogInfo]: event annex.1029 option annexation.1029.a"
		name = annexation.1029.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_global_flag = PB_GLOBAL_Splitaly

		if = {
			limit = { country_exists = SCL }
			custom_effect_tooltip = FRA_puppet_tooltip
		}
		else = {
			set_temp_variable = { tag_to_release = SCL }
			release_targeted_tag = yes
		}
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SCL = {
				set_cosmetic_tag = SCL_Occupied_Republic
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1029 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1029 option annexation.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1029 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Central Italy
	id = annexation.1030
	title = annexation_central_italy
	desc = annexation_central_italy_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ITA = {
					ROOT_can_grant_land = yes
				}
			}
			ITA = { save_event_target_as = italy }
		}
	}

	option = { #Release Central Italy
		log = "[GetLogInfo]: event annex.1030 option annexation.1030.a"
		name = annexation.1030.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = PAP }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			PAP = {
				set_cosmetic_tag = PAP_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			PAP = {
				drop_cosmetic_tag = yes
			}
		}

		recheck_annexations = yes
	}

	option = { #Give Central Italy to Italy
		log = "[GetLogInfo]: event annex.1030 option annexation.1030.b"
		name = annexation.1030.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Splitaly
			}
		}

		ai_chance = { base = 0 }

		ITA = {
			transfer_state = 2
			transfer_state = 1432
			transfer_state = 157
			transfer_state = 161
		}

		recheck_annexations = yes
	}

	option = { #Give Central Italy to Papacy
		log = "[GetLogInfo]: event annex.1030 option annexation.1030.b"
		name = annexation.1030.c
		trigger = {
			is_subject = no
			VAT = {
				exists = yes
			}
			NOT = {
				has_global_flag = PB_GLOBAL_Splitaly
			}
		}

		ai_chance = { base = 0 }

		VAT = {
			transfer_state = 2
			transfer_state = 1432
			transfer_state = 157
			transfer_state = 161
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1030 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1030 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1030 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Tuscany
	id = annexation.1031
	title = annexation_tuscany
	desc = annexation_tuscany_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ITA = {
					ROOT_can_grant_land = yes
				}
			}
			ITA = { save_event_target_as = italy }
		}
	}

	option = { #Release Tuscany
		log = "[GetLogInfo]: event annex.1031 option annexation.1031.a"
		name = annexation.1031.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = TUS }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			TUS = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			TUS = {
				set_cosmetic_tag = TUS_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give Central Italy to Italy
		log = "[GetLogInfo]: event annex.1031 option annexation.1031.b"
		name = annexation.1031.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Splitaly
			}
		}

		ai_chance = { base = 0 }

		ITA = {
			transfer_state = 162
		}

		recheck_annexations = yes
	}
	
	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1031 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1031 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1031 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Modena
	id = annexation.1032
	title = annexation_modena
	desc = annexation_modena_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ITA = {
					ROOT_can_grant_land = yes
				}
			}
			ITA = { save_event_target_as = italy }
		}
	}

	option = { #Release Modena
		log = "[GetLogInfo]: event annex.1032 option annexation.1032.a"
		name = annexation.1032.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = MOD }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			MOD = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			MOD = {
				set_cosmetic_tag = MOD_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give Modena to Italy
		log = "[GetLogInfo]: event annex.1032 option annexation.1032.b"
		name = annexation.1032.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Splitaly
			}
		}

		ai_chance = { base = 0 }

		ITA = {
			transfer_state = 835
		}

		recheck_annexations = yes
	}
	
	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1032 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1032 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1032 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Parma
	id = annexation.1033
	title = annexation_parma
	desc = annexation_parma_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ITA = {
					ROOT_can_grant_land = yes
				}
			}
			ITA = { save_event_target_as = italy }
		}
	}

	option = { #Release Parma
		log = "[GetLogInfo]: event annex.1033 option annexation.1033.a"
		name = annexation.1033.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = PRM }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			PRM = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			PRM = {
				set_cosmetic_tag = PRM_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give Parma to Italy
		log = "[GetLogInfo]: event annex.1033 option annexation.1033.b"
		name = annexation.1033.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Splitaly
			}
		}

		ai_chance = { base = 0 }

		ITA = {
			transfer_state = 834
		}

		recheck_annexations = yes
	}
	
	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1033 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1033 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1033 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Venice
	id = annexation.1034
	title = annexation_venice
	desc = annexation_venice_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ITA = {
					ROOT_can_grant_land = yes
				}
			}
			ITA = { save_event_target_as = italy }
		}
	}

	option = { #Release Venice
		log = "[GetLogInfo]: event annex.1034 option annexation.1034.a"
		name = annexation.1034.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = VNC }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			VNC = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			VNC = {
				set_cosmetic_tag = VNC_Occupied_Monarchy
			}
		}

		recheck_annexations = yes
	}

	option = { #Give Venice to Italy
		log = "[GetLogInfo]: event annex.1034 option annexation.1034.b"
		name = annexation.1034.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Splitaly
			}
		}

		ai_chance = { base = 0 }

		ITA = {
			transfer_state = 160
		}

		recheck_annexations = yes
	}
	
	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1034 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1034 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1034 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Lombardy
	id = annexation.1035
	title = annexation_modena
	desc = annexation_modena_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ITA = {
					ROOT_can_grant_land = yes
				}
			}
			ITA = { save_event_target_as = italy }
		}
	}

	option = { #Release Venice
		log = "[GetLogInfo]: event annex.1035 option annexation.1035.a"
		name = annexation.1035.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = LMB }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			LMB = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			LMB = {
				set_cosmetic_tag = LMB_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give Lombardy to Italy
		log = "[GetLogInfo]: event annex.1035 option annexation.1035.b"
		name = annexation.1035.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Splitaly
			}
		}

		ai_chance = { base = 0 }

		ITA = {
			transfer_state = 159
		}

		recheck_annexations = yes
	}
	
	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1035 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1035 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1035 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Piedmont
	id = annexation.1036
	title = annexation_piedmont
	desc = annexation_piedmont_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ITA = {
					ROOT_can_grant_land = yes
				}
			}
			ITA = { save_event_target_as = italy }
		}
	}

	option = { #Release Savoy
		log = "[GetLogInfo]: event annex.1036 option annexation.1036.a"
		name = annexation.1036.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = SAV }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SAV = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SAV = {
				set_cosmetic_tag = SAV_Occupied_Monarchy
			}
		}

		recheck_annexations = yes
	}

	option = { #Give Lombardy to Italy
		log = "[GetLogInfo]: event annex.1036 option annexation.1036.b"
		name = annexation.1036.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Splitaly
			}
		}

		ai_chance = { base = 0 }

		ITA = {
			transfer_state = 158
			transfer_state = 832
			transfer_state = 831
			transfer_state = 1023
		}

		recheck_annexations = yes
	}
	
	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1036 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1036 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1036 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of the Vatican
	id = annexation.1037
	title = annexation_vatican
	desc = annexation_vatican_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ITA = {
					ROOT_can_grant_land = yes
				}
			}
			ITA = { save_event_target_as = italy }
		}
	}

	option = { #Release Savoy
		log = "[GetLogInfo]: event annex.1037 option annexation.1037.a"
		name = annexation.1037.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = VAT }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			VAT = {
				set_cosmetic_tag = VAT_Occupied_Republic
			}
		}

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			VAT = {
				set_cosmetic_tag = VAT_Occupied_Monarchy
			}
		}

		recheck_annexations = yes
	}

	option = { #Give the Vatican to Italy
		log = "[GetLogInfo]: event annex.1037 option annexation.1037.b"
		name = annexation.1037.b
		trigger = {
			is_subject = no
			ITA = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		ITA = {
			transfer_state = 915
		}

		recheck_annexations = yes
	}
	
	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1037 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1037 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1037 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of the San Marino
	id = annexation.1038
	title = annexation_san_marino
	desc = annexation_san_marino_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ITA = {
					ROOT_can_grant_land = yes
				}
			}
			ITA = { save_event_target_as = italy }
		}
	}

	option = { #Release San Marino
		log = "[GetLogInfo]: event annex.1038 option annexation.1038.a"
		name = annexation.1038.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = SNM }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SNM = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SNM = {
				set_cosmetic_tag = SNM_Occupied_Monarchy
			}
		}

		recheck_annexations = yes
	}

	option = { #Give San Marino to Italy
		log = "[GetLogInfo]: event annex.1038 option annexation.1038.b"
		name = annexation.1038.b
		trigger = {
			is_subject = no
			ITA = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		ITA = {
			transfer_state = 970
		}

		recheck_annexations = yes
	}
	
	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1038 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1038 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1038 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Monarco
	id = annexation.1039
	title = annexation_monaco
	desc = annexation_monaco_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ITA = {
					ROOT_can_grant_land = yes
				}
			}
			ITA = { save_event_target_as = italy }
		}
	}

	option = { #Release Monaco
		log = "[GetLogInfo]: event annex.1039 option annexation.1039.a"
		name = annexation.1039.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = MNC }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			MNC = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			MNC = {
				set_cosmetic_tag = MNC_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give Monaco to Italy
		log = "[GetLogInfo]: event annex.1039 option annexation.1039.b"
		name = annexation.1039.b
		trigger = {
			is_subject = no
			ITA = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		ITA = {
			transfer_state = 914
		}

		recheck_annexations = yes
	}
	
	option = { #Give Monaco to France
		log = "[GetLogInfo]: event annex.1039 option annexation.1039.c"
		name = annexation.1039.b
		trigger = {
			is_subject = no
			FRA = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		FRA = {
			transfer_state = 914
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1039 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1039 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1039 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Corsica
	id = annexation.1040
	title = annexation_corsica
	desc = annexation_corsica_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ITA = {
					ROOT_can_grant_land = yes
				}
			}
			ITA = { save_event_target_as = italy }
		}
	}

	option = { #Release Corsica
		log = "[GetLogInfo]: event annex.1040 option annexation.1040.a"
		name = annexation.1040.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = COR }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			COR = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			COR = {
				set_cosmetic_tag = COR_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give Corsica to France
		log = "[GetLogInfo]: event annex.1040 option annexation.1040.b"
		name = annexation.1040.b
		trigger = {
			is_subject = no
			FRA = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		ITA = {
			transfer_state = 1
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1040 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1040 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1040 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Germany
	id = annexation.1041
	title = annexation_germany
	desc = annexation_germany_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		28 = { retain_state = yes } 
		1191 = { retain_state = yes }
		8 = { retain_state = yes }
		909 = { retain_state = yes }
		51 = { retain_state = yes }
		42 = { retain_state = yes }
		1183 = { retain_state = yes }
		1025 = { retain_state = yes }
		50 = { retain_state = yes }
		52 = { retain_state = yes }
		53 = { retain_state = yes }
		54 = { retain_state = yes }
		60 = { retain_state = yes }
		65 = { retain_state = yes }
		1182 = { retain_state = yes }
		66 = { retain_state = yes }
		68 = { retain_state = yes }
		63 = { retain_state = yes }
		62 = { retain_state = yes }
		64 = { retain_state = yes }
		61 = { retain_state = yes }
		1180 = { retain_state = yes }
		1456 = { retain_state = yes }
		59 = { retain_state = yes }
		917 = { retain_state = yes }
		57 = { retain_state = yes }
		56 = { retain_state = yes }
		1178 = { retain_state = yes }
		1179 = { retain_state = yes }
		1380 = { retain_state = yes }
		69 = { retain_state = yes }
		1192 = { retain_state = yes }
		9 = { retain_state = yes }
		75 = { retain_state = yes }
		152 = { retain_state = yes }
		4 = { retain_state = yes }
		1190 = { retain_state = yes }
		1188 = { retain_state = yes }
		1241 = { retain_state = yes }
		102 = { retain_state = yes }
		1030 = { retain_state = yes }
		736 = { retain_state = yes }
		923 = { retain_state = yes }
		39 = { retain_state = yes }
		153 = { retain_state = yes }
		1187 = { retain_state = yes }
		803 = { retain_state = yes }
		777 = { retain_state = yes }
		1072 = { retain_state = yes }
		1449 = { retain_state = yes }
		1450 = { retain_state = yes }
		1167 = { retain_state = yes }
		1166 = { retain_state = yes }
		726 = { retain_state = yes }
		1059 = { retain_state = yes }
		1361 = { retain_state = yes }
		1189 = { retain_state = yes }
		1379 = { retain_state = yes }
		1181 = { retain_state = yes }
	}

	option = { #Release Germany
		log = "[GetLogInfo]: event annex.1041 option annexation.1041.a"
		name = annexation.1041.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = GER }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			GER = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			GER = {
				set_cosmetic_tag = GER_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Break Germany Up
		log = "[GetLogInfo]: event annex.1041 option annexation.1041.b"
		name = annexation.1041.b
		trigger = {
			is_subject = no
		}

		ai_chance = { base = 0 }

		set_global_flag = PB_GLOBAL_Germany_is_kil

		set_temp_variable = { tag_to_release = FRK }
		release_targeted_tag = yes

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1041 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1041 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1041 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Luxembourg
	id = annexation.1042
	title = annexation_luxembourg
	desc = annexation_luxembourg_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Luxembourg
		log = "[GetLogInfo]: event annex.1042 option annexation.1042.a"
		name = annexation.1042.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = LUX }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			LUX = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			LUX = {
				set_cosmetic_tag = LUX_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1042 option annexation.1042.b"
		name = annexation.1042.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}

		ai_chance = { base = 0 }

		GER = {
			transfer_state = 8
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1042 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1042 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1042 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Rhineland
	id = annexation.1043
	title = annexation_rhineland
	desc = annexation_rhineland_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Rhineland
		log = "[GetLogInfo]: event annex.1043 option annexation.1043.a"
		name = annexation.1043.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = RHH }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			RHH = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			RHH = {
				set_cosmetic_tag = RHH_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1043 option annexation.1043.b"
		name = annexation.1043.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}

		ai_chance = { base = 0 }

		GER = {
			transfer_state = 42
			transfer_state = 51
			transfer_state = 909
			transfer_state = 1183
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1043 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1043 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1043 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Wurttemberg
	id = annexation.1044
	title = annexation_wurttemberg
	desc = annexation_wurttemberg_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Wurttemberg
		log = "[GetLogInfo]: event annex.1044 option annexation.1044.a"
		name = annexation.1044.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = WRT }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			WRT = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			WRT = {
				set_cosmetic_tag = WRT_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1044 option annexation.1044.b"
		name = annexation.1044.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}

		ai_chance = { base = 0 }

		GER = {
			transfer_state = 50
			transfer_state = 1025
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1044 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1044 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1044 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Bavaria
	id = annexation.1045
	title = annexation_bavaria
	desc = annexation_bavaria_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Bavaria
		log = "[GetLogInfo]: event annex.1045 option annexation.1045.a"
		name = annexation.1045.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = BAV }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			BAV = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			BAV = {
				set_cosmetic_tag = BAV_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1045 option annexation.1045.b"
		name = annexation.1045.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}

		ai_chance = { base = 0 }

		GER = {
			transfer_state = 52
			transfer_state = 53
			transfer_state = 54
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1045 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1045 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1045 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Austria
	id = annexation.1046
	title = annexation_austria
	desc = annexation_austria_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		39 = { retain_state = yes }
	}

	option = { #Release Bavaria
		log = "[GetLogInfo]: event annex.1046 option annexation.1046.a"
		name = annexation.1046.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = AUS }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			AUS = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			AUS = {
				set_cosmetic_tag = AUS_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1046 option annexation.1046.b"
		name = annexation.1046.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}

		ai_chance = { base = 0 }

		GER = {
			transfer_state = 4
			transfer_state = 152
			transfer_state = 1187
			transfer_state = 1188
			transfer_state = 1189
			transfer_state = 1190
			transfer_state = 1241
			transfer_state = 1250
			transfer_state = 1361
			transfer_state = 153
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1046 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1046 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1046 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Saxony
	id = annexation.1047
	title = annexation_saxony
	desc = annexation_saxony_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Saxony
		log = "[GetLogInfo]: event annex.1047 option annexation.1047.a"
		name = annexation.1047.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = SAX }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SAX = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SAX = {
				set_cosmetic_tag = SAX_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1047 option annexation.1047.b"
		name = annexation.1047.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}

		ai_chance = { base = 0 }

		GER = {
			transfer_state = 60
			transfer_state = 65
			transfer_state = 1182
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1047 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1047 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1047 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Hannover
	id = annexation.1048
	title = annexation_hannover
	desc = annexation_hannover_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Hannover
		log = "[GetLogInfo]: event annex.1047 option annexation.1047.a"
		name = annexation.1047.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = HAN }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			HAN = {
				set_cosmetic_tag = HAN_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			HAN = {
				set_cosmetic_tag = HAN_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1047 option annexation.1047.b"
		name = annexation.1047.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}

		ai_chance = { base = 0 }

		GER = {
			transfer_state = 56
			transfer_state = 57
			transfer_state = 59
			transfer_state = 917
			transfer_state = 1178
			transfer_state = 1179
			transfer_state = 1380
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1047 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1047 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1047 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Brandenburg-Prussia
	id = annexation.1049
	title = annexation_brandenburg_prussia
	desc = annexation_brandenburg_prussia_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Hannover
		log = "[GetLogInfo]: event annex.1047 option annexation.1049.a"
		name = annexation.1047.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = BRN }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			BRN = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			BRN = {
				set_cosmetic_tag = BRN_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1047 option annexation.1047.b"
		name = annexation.1047.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}

		ai_chance = { base = 0 }

		GER = {
			transfer_state = 61
			transfer_state = 62
			transfer_state = 63
			transfer_state = 64
			transfer_state = 68
			transfer_state = 1180
			transfer_state = 1456
			transfer_state = 1181
			transfer_state = 1379
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1047 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1047 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1047 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Brandenburg-Prussia
	id = annexation.1050
	title = annexation_brandenburg_prussia
	desc = annexation_brandenburg_prussia_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Hannover
		log = "[GetLogInfo]: event annex.1047 option annexation.1050.a"
		name = annexation.1047.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = CZE }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			CZE = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			CZE = {
				set_cosmetic_tag = CZE_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1047 option annexation.1047.b"
		name = annexation.1047.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}

		ai_chance = { base = 0 }

		GER = {
			transfer_state = 9
			transfer_state = 69
			transfer_state = 74
			transfer_state = 75
			transfer_state = 1192
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1047 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1047 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1047 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Slovenia
	id = annexation.1051
	title = annexation_slovenia
	desc = annexation_slovenia_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Hannover
		log = "[GetLogInfo]: event annex.1047 option annexation.1051.a"
		name = annexation.1047.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = SLV }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SLV = {
				set_cosmetic_tag = SLV_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SLV = {
				set_cosmetic_tag = SLV_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1047 option annexation.1047.b"
		name = annexation.1047.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}

		ai_chance = { base = 0 }

		GER = {
			transfer_state = 102
			transfer_state = 736
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1047 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1047 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1047 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Friaul
	id = annexation.1052
	title = annexation_friaul
	desc = annexation_friaul_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return to Germany
		log = "[GetLogInfo]: event annex.1052 option annexation.1052.a"
		name = annexation.1052.a
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		GER = {
			transfer_state = 923
		}

		recheck_annexations = yes
	}

	option = { #Give it to Italy
		log = "[GetLogInfo]: event annex.1052 option annexation.1052.b"
		name = annexation.1052.b
		trigger = {
			is_subject = no
			OR = {
				AND = {
					ITA = {
						exists = yes
					}
					IST = {
						exists = no
					}
				}
				AND = {
					ITA = {
						exists = no
					}
					IST = {
						exists = yes
					}
				}
			}
		}

		ai_chance = { base = 0 }

		if = {
			limit = {
				ITA = {
					exists = yes
				}
				IST = {
					exists = no
				}
			}
			ITA = {
				transfer_state = 923
			}
		}

		if = {
			limit = {
				IST = {
					exists = yes
				}
				ITA = {
					exists = no
				}
			}
			IST = {
				transfer_state = 923
			}
		}

		recheck_annexations = yes
	}

	option = { #Return to Austria
		log = "[GetLogInfo]: event annex.1052 option annexation.1052.a"
		name = annexation.1052.a
		trigger = {
			is_subject = no
			AUS = {
				exists = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		AUS = {
			transfer_state = 923
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1047 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1047 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1047 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of South Tyrol
	id = annexation.1053
	title = annexation_south_tyrol
	desc = annexation_south_tyrol_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return to Germany
		log = "[GetLogInfo]: event annex.1053 option annexation.1051.a"
		name = annexation.1053.a
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		GER = {
			transfer_state = 39
		}

		recheck_annexations = yes
	}

	option = { #Give it to Italy
		log = "[GetLogInfo]: event annex.1053 option annexation.1053.b"
		name = annexation.1053.b
		trigger = {
			is_subject = no
			OR = {
				AND = {
					ITA = {
						exists = yes
					}
					IST = {
						exists = no
					}
				}
				AND = {
					ITA = {
						exists = no
					}
					IST = {
						exists = yes
					}
				}
			}
		}

		ai_chance = { base = 0 }

		if = {
			limit = {
				ITA = {
					exists = yes
				}
				IST = {
					exists = no
				}
			}
			ITA = {
				transfer_state = 39
			}
		}

		if = {
			limit = {
				IST = {
					exists = yes
				}
				ITA = {
					exists = no
				}
			}
			IST = {
				transfer_state = 39
			}
		}

		recheck_annexations = yes
	}

	option = { #Return to Austria
		log = "[GetLogInfo]: event annex.1053 option annexation.1051.c"
		name = annexation.1053.a
		trigger = {
			is_subject = no
			AUS = {
				exists = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		AUS = {
			transfer_state = 39
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1053 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1053 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1053 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Alsace
	id = annexation.1054
	title = annexation_alsace
	desc = annexation_alsace_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return to Germany
		log = "[GetLogInfo]: event annex.1054 option annexation.1054.a"
		name = annexation.1054.a
		trigger = {
			is_subject = no
			GER = {
				exists = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		GER = {
			transfer_state = 28
			transfer_state = 1191
		}

		recheck_annexations = yes
	}

	option = { #Give it to France
		log = "[GetLogInfo]: event annex.1054 option annexation.1054.b"
		name = annexation.1054.b
		trigger = {
			is_subject = no
			FRA = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		FRA = {
			transfer_state = 28
			transfer_state = 1191
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1054 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1054 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1054 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Silesia
	id = annexation.1055
	title = annexation_silesia
	desc = annexation_silesia_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return to Germany
		log = "[GetLogInfo]: event annex.1055 option annexation.1055.a"
		name = annexation.1055.a
		trigger = {
			is_subject = no
			GER = {
				exists = yes
			}
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		GER = {
			transfer_state = 66
		}

		recheck_annexations = yes
	}

	option = { #Give it to Brandenburg
		log = "[GetLogInfo]: event annex.1055 option annexation.1055.b"
		name = annexation.1055.b
		trigger = {
			is_subject = no
			BRN = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		BRN = {
			transfer_state = 66
		}

		recheck_annexations = yes
	}

	option = { #Give it to Poland
		log = "[GetLogInfo]: event annex.1055 option annexation.1055.c"
		name = annexation.1055.c
		trigger = {
			is_subject = no
			POL = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		POL = {
			transfer_state = 66
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1055 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1055 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1055 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Sudetenland
	id = annexation.1056
	title = annexation_sudetenland
	desc = annexation_sudetenland_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return to Germany
		log = "[GetLogInfo]: event annex.1056 option annexation.1056.a"
		name = annexation.1056.a
		trigger = {
			is_subject = no
			GER = {
				exists = yes
			}
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		GER = {
			transfer_state = 69 #nice
			transfer_state = 1192
		}

		recheck_annexations = yes
	}

	option = { #Give it to Czechia
		log = "[GetLogInfo]: event annex.1056 option annexation.1056.b"
		name = annexation.1056.b
		trigger = {
			is_subject = no
			BRN = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		CZE = {
			transfer_state = 69 #nice
			transfer_state = 1192
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1056 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1056 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1056 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Rijeka
	id = annexation.1057
	title = annexation_rijeka
	desc = annexation_rijeka_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return to Germany
		log = "[GetLogInfo]: event annex.1057 option annexation.1057.a"
		name = annexation.1057.a
		trigger = {
			is_subject = no
			GER = {
				exists = yes
			}
			NOT = {
				has_global_flag = PB_GLOBAL_Germany_is_kil
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		GER = {
			transfer_state = 1030 
		}

		recheck_annexations = yes
	}

	option = { #Give it to Austria
		log = "[GetLogInfo]: event annex.1057 option annexation.1057.b"
		name = annexation.1057.b
		trigger = {
			is_subject = no
			AUS = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		AUS = {
			transfer_state = 1030 
		}

		recheck_annexations = yes
	}

	option = { #Give it to Croatia
		log = "[GetLogInfo]: event annex.1057 option annexation.1057.b"
		name = annexation.1057.c
		trigger = {
			is_subject = no
			CRO = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		CRO = {
			transfer_state = 1030 
		}

		recheck_annexations = yes
	}

	option = { #Give it to the Dinaric Kingdom
		log = "[GetLogInfo]: event annex.1057 option annexation.1057.b"
		name = annexation.1057.c
		trigger = {
			is_subject = no
			CRO = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		SLA = {
			transfer_state = 1030 
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1057 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1057 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1057 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Basque Country
	id = annexation.1058
	title = annexation_basque
	desc = annexation_basque_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		841 = { retain_state = yes } 
	}

	option = { #Release Basque
		log = "[GetLogInfo]: event annex.1058 option annexation.1058.a"
		name = annexation.1058.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = BSQ }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			BSQ = {
				set_cosmetic_tag = GER_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			BSQ = {
				drop_cosmetic_tag = yes
			}
		}

		recheck_annexations = yes
	}

	option = { #Return it to Spain
		log = "[GetLogInfo]: event annex.1058 option annexation.1058.b"
		name = annexation.1058.b
		trigger = {
			is_subject = no
			SPR = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		SPR = {
			transfer_state = 172
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1058 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1058 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1058 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Apurdi
	id = annexation.1059
	title = annexation_apurdi
	desc = annexation_apurdi_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return it to Basque
		log = "[GetLogInfo]: event annex.1059 option annexation.1059.a"
		name = annexation.1059.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}
		
		BSQ = {
			transfer_state = 841
		}

		recheck_annexations = yes
	}

	option = { #Return it to France
		log = "[GetLogInfo]: event annex.1059 option annexation.1059.b"
		name = annexation.1059.b
		trigger = {
			is_subject = no
			FRA = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		FRA = {
			transfer_state = 841
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1059 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1059 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1059 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Holstein
	id = annexation.1060
	title = annexation_holstein
	desc = annexation_holstein_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Basque
		log = "[GetLogInfo]: event annex.1060 option annexation.1060.a"
		name = annexation.1060.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = SCH }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SCH = {
				set_cosmetic_tag = SCH_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SCH = {
				set_cosmetic_tag = SCH_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1060 option annexation.1060.b"
		name = annexation.1060.b
		trigger = {
			is_subject = no
			GER = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		GER = {
			transfer_state = 58
		}

		recheck_annexations = yes
	}

	option = { #Give it to Denmark
		log = "[GetLogInfo]: event annex.1060 option annexation.1060.b"
		name = annexation.1060.b
		trigger = {
			is_subject = no
			GER = {
				exists = yes
			}
		}

		ai_chance = { base = 0 }

		DEN = {
			transfer_state = 58
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1060 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1060 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1060 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Denmark
	id = annexation.1061
	title = annexation_denmark
	desc = annexation_denmark_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		824 = { retain_state = yes } 
	}

	option = { #Release Denmark
		log = "[GetLogInfo]: event annex.1061 option annexation.1061.a"
		name = annexation.1061.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = DEN }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			DEN = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			DEN = {
				set_cosmetic_tag = DEN_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1061 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1061 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1061 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Sweden
	id = annexation.1062
	title = annexation_sweden
	desc = annexation_sweden_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		138 = { retain_state = yes } 
		1011 = { retain_state = yes } 
		144 = { retain_state = yes } 
	}

	option = { #Release Sweden
		log = "[GetLogInfo]: event annex.1062 option annexation.1062.a"
		name = annexation.1062.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = SWE }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SWE = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SWE = {
				set_cosmetic_tag = SWE_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1062 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1062 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1062 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Danish West Indies
	id = annexation.1063
	title = annexation_danish_indies
	desc = annexation_danish_indies_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return them to Denmark
		log = "[GetLogInfo]: event annex.1063 option annexation.1063.a"
		name = annexation.1063.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		DEN = {
			transfer_state = 824
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1063 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1063 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1063 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Scania
	id = annexation.1064
	title = annexation_scania
	desc = annexation_scania_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return them to Sweden
		log = "[GetLogInfo]: event annex.1064 option annexation.1064.a"
		name = annexation.1064.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SWE = {
			transfer_state = 138
		}

		recheck_annexations = yes
	}

	option = { #Give it to Denmark
		log = "[GetLogInfo]: event annex.1064 option annexation.1064.a"
		name = annexation.1064.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		DEN = {
			transfer_state = 138
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1064 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1064 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1064 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Nordland
	id = annexation.1065
	title = annexation_nordland
	desc = annexation_nordland_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return it to Sweden
		log = "[GetLogInfo]: event annex.1065 option annexation.1065.a"
		name = annexation.1065.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SWE = {
			transfer_state = 1011
		}

		recheck_annexations = yes
	}

	option = { #Give it to Norway
		log = "[GetLogInfo]: event annex.1065 option annexation.1065.a"
		name = annexation.1065.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		NOR = {
			transfer_state = 1011
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1065 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1065 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1065 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Finnmark
	id = annexation.1066
	title = annexation_nordland
	desc = annexation_nordland_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return it to Sweden
		log = "[GetLogInfo]: event annex.1066 option annexation.1066.a"
		name = annexation.1066.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SWE = {
			transfer_state = 144
		}

		recheck_annexations = yes
	}

	option = { #Give it to Norway
		log = "[GetLogInfo]: event annex.1066 option annexation.1066.a"
		name = annexation.1066.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		NOR = {
			transfer_state = 144
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1066 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1066 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1066 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of West Croatia
	id = annexation.1067
	title = annexation_decision_dinaric
	desc = annexation_decision_dinaric_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		1234 = { retain_state = yes }
		1233 = { retain_state = yes }
		1232 = { retain_state = yes }
	}

	option = { #Release the Dinaric Kingdom
		log = "[GetLogInfo]: event annex.1067 option annexation.1067.a"
		name = annexation.1067.a
		trigger = {
			SLA = {
				exists = no
			}
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = SLA }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SLA = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SLA = {
				set_cosmetic_tag = SLA_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Unify it with Croatia
		log = "[GetLogInfo]: event annex.1067 option annexation.1067.a"
		name = annexation.1067.a
		trigger = {
			is_subject = no
			CRO = {
				exists = yes
				is_subject_of = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		CRO = {
			transfer_state = 794
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1067 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1067 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1067 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Krajina
	id = annexation.1068
	title = annexation_decision_krajina
	desc = annexation_decision_krajina_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Transfer it to the Dinarics
		log = "[GetLogInfo]: event annex.1068 option annexation.1068.a"
		name = annexation.1068.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SLA = {
			transfer_state = 1234
		}

		recheck_annexations = yes
	}

	option = { #Grant it to Croatia
		log = "[GetLogInfo]: event annex.1068 option annexation.1068.b"
		name = annexation.1068.b
		trigger = {
			is_subject = no
			CRO = {
				exists = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		CRO = {
			transfer_state = 1234
		}

		recheck_annexations = yes
	}

	option = { #Grant it to Bosnia
		log = "[GetLogInfo]: event annex.1068 option annexation.1068.c"
		name = annexation.1068.c
		trigger = {
			is_subject = no
			BOS = {
				exists = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		BOS = {
			transfer_state = 1234
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1068 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1068 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1068 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Tropolje
	id = annexation.1069
	title = annexation_decision_tropolje
	desc = annexation_decision_tropolje_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Transfer it to the Dinarics
		log = "[GetLogInfo]: event annex.1069 option annexation.1069.a"
		name = annexation.1069.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SLA = {
			transfer_state = 1233
		}

		recheck_annexations = yes
	}

	option = { #Grant it to Bosnia
		log = "[GetLogInfo]: event annex.1069 option annexation.1069.b"
		name = annexation.1069.b
		trigger = {
			is_subject = no
			BOS = {
				exists = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		BOS = {
			transfer_state = 1233
		}

		recheck_annexations = yes
	}

	option = { #Grant it to Ragusa
		log = "[GetLogInfo]: event annex.1069 option annexation.1069.c"
		name = annexation.1069.c
		trigger = {
			is_subject = no
			DAL = {
				exists = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		DAL = {
			transfer_state = 1233
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1069 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1069 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1069 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of West Herzegovina
	id = annexation.1070
	title = annexation_decision_west_herzegovina
	desc = annexation_decision_west_herzegovina_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Transfer it to the Dinarics
		log = "[GetLogInfo]: event annex.1070 option annexation.1070.a"
		name = annexation.1070.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SLA = {
			transfer_state = 1232
		}

		recheck_annexations = yes
	}

	option = { #Grant it to Bosnia
		log = "[GetLogInfo]: event annex.1070 option annexation.1070.b"
		name = annexation.1070.b
		trigger = {
			is_subject = no
			BOS = {
				exists = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		BOS = {
			transfer_state = 1232
		}

		recheck_annexations = yes
	}

	option = { #Grant it to Ragusa
		log = "[GetLogInfo]: event annex.1070 option annexation.1070.c"
		name = annexation.1070.c
		trigger = {
			is_subject = no
			DAL = {
				exists = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		DAL = {
			transfer_state = 1232
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1070 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1070 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1070 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Croatia
	id = annexation.1071
	title = annexation_decision_croatia
	desc = annexation_decision_croatia_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		1235 = { retain_state = yes }
	}

	option = { #Release Croatia
		log = "[GetLogInfo]: event annex.1071 option annexation.1071.a"
		name = annexation.1071.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = CRO }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			CRO = {
				set_cosmetic_tag = SLA_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			CRO = {
				drop_cosmetic_tag = yes
			}
		}
		recheck_annexations = yes
	}

	option = { #Transfer it to the Dinarics
		log = "[GetLogInfo]: event annex.1071 option annexation.1071.b"
		name = annexation.1071.b
		trigger = {
			is_subject = no
			SLA = {
				exists = yes
				is_subject_of = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SLA = {
			transfer_state = 109
			transfer_state = 1029
			transfer_state = 1026
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1071 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1071 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1071 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Ragusa
	id = annexation.1072
	title = annexation_decision_ragusa
	desc = annexation_decision_ragusa_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Ragusa
		log = "[GetLogInfo]: event annex.1072 option annexation.1072.a"
		name = annexation.1072.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = DAL }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			DAL = {
				set_cosmetic_tag = DAL_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			DAL = {
				drop_cosmetic_tag = yes
			}
		}
		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1072 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1072 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1072 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Serbia
	id = annexation.1073
	title = annexation_decision_serbia
	desc = annexation_decision_serbia_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		1028 = { retain_state = yes }
		104 = { retain_state = yes }
		1027 = { retain_state = yes }
		105 = { retain_state = yes }
		1242 = { retain_state = yes }
	}

	option = { #Release Serbia
		log = "[GetLogInfo]: event annex.1073 option annexation.1073.a"
		name = annexation.1073.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = SER }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SER = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SER = {
				set_cosmetic_tag = SER_Occupied_Republic
			}
		}
		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1073 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1073 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1073 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Bosnia
	id = annexation.1074
	title = annexation_decision_bosnia
	desc = annexation_decision_bosnia_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		1028 = { retain_state = yes }
		1027 = { retain_state = yes }
	}

	option = { #Release Bosnia
		log = "[GetLogInfo]: event annex.1074 option annexation.1074.a"
		name = annexation.1074.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = BOS }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			BOS = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = BOS_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			BOS = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = BOS_Occupied_Republic
			}
		}
		recheck_annexations = yes
	}

	option = { #Give the land to Serbia
		log = "[GetLogInfo]: event annex.1074 option annexation.1074.a"
		name = annexation.1074.b
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		104 = {
			transfer_state_to = SER
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1074 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1074 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1074 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Banja Luka
	id = annexation.1075
	title = annexation_decision_banja_luka
	desc = annexation_decision_banja_luka_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return it to Serbia
		log = "[GetLogInfo]: event annex.1075 option annexation.1075.a"
		name = annexation.1075.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		1028 = {
			transfer_state_to = SER
		}

		recheck_annexations = yes
	}

	option = { #Give the land to Bosnia
		log = "[GetLogInfo]: event annex.1075 option annexation.1075.a"
		name = annexation.1075.b
		trigger = {
			is_subject = no
			BOS = {
				exists = yes
				is_subject_of = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		1028 = {
			transfer_state_to = BOS
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1075 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1075 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1075 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of East Herzegovina
	id = annexation.1076
	title = annexation_decision_herzegovina
	desc = annexation_decision_herzegovina_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return it to Serbia
		log = "[GetLogInfo]: event annex.1076 option annexation.1076.a"
		name = annexation.1076.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		1027 = {
			transfer_state_to = SER
		}

		recheck_annexations = yes
	}

	option = { #Give the land to Bosnia
		log = "[GetLogInfo]: event annex.1076 option annexation.1076.a"
		name = annexation.1076.b
		trigger = {
			is_subject = no
			BOS = {
				exists = yes
				is_subject_of = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		1027 = {
			transfer_state_to = BOS
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1076 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1076 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1076 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Montenegro
	id = annexation.1077
	title = annexation_decision_montenegro
	desc = annexation_decision_montenegro_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		1242 = { retain_state = yes }
	}

	option = { #Release Montenegro
		log = "[GetLogInfo]: event annex.1077 option annexation.1077.a"
		name = annexation.1077.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = MNT }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			MNT = {
				drop_cosmetic_tag = yes
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			MNT = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = MNT_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give the land to Serbia
		log = "[GetLogInfo]: event annex.1077 option annexation.1077.a"
		name = annexation.1077.b
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		105 = {
			transfer_state_to = SER
		}

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SER = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = SER_Occupied_Monarchy_with_Montenegro
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SER = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = SER_Occupied_Republic_with_Montenegro
			}
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1077 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1077 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1077 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Kotor
	id = annexation.1078
	title = annexation_decision_kotor
	desc = annexation_decision_kotor_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return it to Serbia
		log = "[GetLogInfo]: event annex.1078 option annexation.1078.a"
		name = annexation.1078.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		1242 = {
			transfer_state_to = SER
		}

		recheck_annexations = yes
	}

	option = { #Give the land to Montenegro
		log = "[GetLogInfo]: event annex.1078 option annexation.1078.a"
		name = annexation.1078.b
		trigger = {
			is_subject = no
			MNT = {
				exists = yes
				is_subject_of = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		1242 = {
			transfer_state_to = MNT
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1078 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1078 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1078 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Posavina
	id = annexation.1079
	title = annexation_decision_posavina
	desc = annexation_decision_posavina_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return it to Croatia
		log = "[GetLogInfo]: event annex.1079 option annexation.1079.a"
		name = annexation.1079.a
		trigger = {
			is_subject = no
			CRO = {
				exists = yes
				is_subject_of = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		1235 = {
			transfer_state_to = CRO
		}

		recheck_annexations = yes
	}

	option = { #Give the land to the Dinaric State
		log = "[GetLogInfo]: event annex.1079 option annexation.1079.a"
		name = annexation.1079.b
		trigger = {
			is_subject = no
			SLA = {
				exists = yes
				is_subject_of = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		1235 = {
			transfer_state_to = SLA
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1079 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1079 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1079 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Hungary
	id = annexation.1080
	title = annexation_decision_hungary
	desc = annexation_decision_hungary_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		45 = { retain_state = yes }
		764 = { retain_state = yes }
		82 = { retain_state = yes }
		83 = { retain_state = yes }
		76 = { retain_state = yes }
		1238 = { retain_state = yes }
		1035 = { retain_state = yes }
		1034 = { retain_state = yes }
		1033 = { retain_state = yes }
		84 = { retain_state = yes }
	}

	option = { #Release Hungary
		log = "[GetLogInfo]: event annex.1080 option annexation.1080.a"
		name = annexation.1080.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = HUN }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
					NOT = {
						original_tag = GER
					}
				}
			}
			HUN = {
				set_cosmetic_tag = HUN_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
					original_tag = GER
				}
			}
			HUN = {
				set_cosmetic_tag = HUN_Occupied_Monarchy_Kraut
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SER = {
				drop_cosmetic_tag = yes
			}
		}


		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1080 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1080 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1080 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Vojvodina
	id = annexation.1081
	title = annexation_decision_vojvodina
	desc = annexation_decision_vojvodina_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return it to Hungary
		log = "[GetLogInfo]: event annex.1081 option annexation.1081.a"
		name = annexation.1081.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		HUN = {
			transfer_state = 45
		}

		recheck_annexations = yes
	}

	option = { #Return it to Serbia
		log = "[GetLogInfo]: event annex.1081 option annexation.1081.a"
		name = annexation.1081.b
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SER = {
			transfer_state = 45
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1081 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1081 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1081 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Banat
	id = annexation.1082
	title = annexation_decision_banat
	desc = annexation_decision_banat_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		764 = { retain_state = yes }
	}

	option = { #Release Banat
		log = "[GetLogInfo]: event annex.1082 option annexation.1082.a"
		name = annexation.1082.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = BNA }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
					NOT = {
						original_tag = GER
					}
				}
			}
			BNA = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = BNA_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
					original_tag = GER
				}
			}
			BNA = {
				set_cosmetic_tag = BNA_Occupied_Monarchy_Kraut
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			BNA = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = BNA_Occupied_Republic
			}
		}
		recheck_annexations = yes
	}

	option = { #Give the land to Hungary
		log = "[GetLogInfo]: event annex.1082 option annexation.1082.a"
		name = annexation.1082.b
		trigger = {
			is_subject = no
			HUN = {
				exists = yes
				is_subject_of = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		HUN = {
			transfer_state = 82
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1082 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1082 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1082 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of West Banat
	id = annexation.1083
	title = annexation_decision_west_banat
	desc = annexation_decision_west_banat_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Grant the land to Hungary
		log = "[GetLogInfo]: event annex.1083 option annexation.1083.a"
		name = annexation.1083.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		HUN = {
			transfer_state = 764
		}

		recheck_annexations = yes
	}

	option = { #Give the land to Banat
		log = "[GetLogInfo]: event annex.1083 option annexation.1083.b"
		name = annexation.1083.b
		trigger = {
			is_subject = no
			BNA = {
				exists = yes
				is_subject_of = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		BNA = {
			transfer_state = 764
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1083 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1083 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1083 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Transylvania
	id = annexation.1084
	title = annexation_decision_transylvania
	desc = annexation_decision_transylvania_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Transylvania
		log = "[GetLogInfo]: event annex.1084 option annexation.1084.a"
		name = annexation.1084.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = TRA }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			TRA = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = TRA_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			TRA = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = TRA_Occupied_Republic
			}
		}
		recheck_annexations = yes
	}

	option = { #Give the land to Hungary
		log = "[GetLogInfo]: event annex.1084 option annexation.1084.a"
		name = annexation.1084.b
		trigger = {
			is_subject = no
			HUN = {
				exists = yes
				is_subject_of = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		HUN = {
			transfer_state = 76
			transfer_state = 83
			transfer_state = 1238
			transfer_state = 1035
			transfer_state = 1034
			transfer_state = 1033
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1084 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1084 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1084 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Slovakia
	id = annexation.1085
	title = annexation_decision_slovakia
	desc = annexation_decision_slovakia_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Slovakia
		log = "[GetLogInfo]: event annex.1085 option annexation.1085.a"
		name = annexation.1085.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = SLO }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
					NOT = {
						original_tag = GER
					}
				}
			}
			SLO = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = SLO_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
					original_tag = GER
				}
			}
			SLO = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = SLO_Occupied_Monarchy_Krauts
			}
		}


		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SLO = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = SLO_Occupied_Republic
			}
		}
		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1085 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1085 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1085 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Wallachia
	id = annexation.1086
	title = annexation_decision_wallachia
	desc = annexation_decision_wallachia_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Wallachia
		log = "[GetLogInfo]: event annex.1086 option annexation.1086.a"
		name = annexation.1086.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = ROM }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			ROM = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = ROM_Occupied_Monarchy
			}
		}


		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			ROM = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = ROM_Occupied_Republic
			}
		}
		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1086 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1086 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1086 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Moldova
	id = annexation.1087
	title = annexation_decision_moldova
	desc = annexation_decision_moldova_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Moldova
		log = "[GetLogInfo]: event annex.1087 option annexation.1087.a"
		name = annexation.1087.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = MOL }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			MOL = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = MOL_Occupied_Monarchy
			}
		}


		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			MOL = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = MOL_Occupied_Republic
			}
		}
		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1087 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1087 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1087 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Bulgaria
	id = annexation.1088
	title = annexation_decision_bulgaria
	desc = annexation_decision_bulgaria_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		108 = { retain_state = yes }
		106 = { retain_state = yes }
	}

	option = { #Release Bulgaria
		log = "[GetLogInfo]: event annex.1088 option annexation.1088.a"
		name = annexation.1088.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = BUL }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			BUL = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = BUL_Occupied_Monarchy
			}
		}


		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			BUL = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = BUL_Occupied_Republic
			}
		}
		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1088 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1088 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1088 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Morava
	id = annexation.1089
	title = annexation_decision_morava
	desc = annexation_decision_morava_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Transfer to Bulgaria
		log = "[GetLogInfo]: event annex.1089 option annexation.1089.a"
		name = annexation.1089.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		BUL = {
			transfer_state = 108
		}

		recheck_annexations = yes
	}

	option = { #Transfer to Serbia
		log = "[GetLogInfo]: event annex.1089 option annexation.1089.b"
		name = annexation.1089.b
		trigger = {
			is_subject = no
			SER = {
				exists = yes
				OR = {
					is_subject_of = ROOT
					is_in_faction_with = ROOT
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SER = {
			transfer_state = 108
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1089 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1089 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1089 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Vardar
	id = annexation.1090
	title = annexation_decision_vardar
	desc = annexation_decision_vardar_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Release Macedonia
		log = "[GetLogInfo]: event annex.1090 option annexation.1090.a"
		name = annexation.1090.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = MAC }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			MAC = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = MAC_Occupied_Monarchy
			}
		}


		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			MAC = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = MAC_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Transfer to Bulgaria
		log = "[GetLogInfo]: event annex.1090 option annexation.1090.b"
		name = annexation.1090.b
		trigger = {
			is_subject = no
			BUL = {
				exists = yes
				OR = {
					is_subject_of = ROOT
					is_in_faction_with = ROOT
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		BUL = {
			transfer_state = 106
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1090 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1090 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1090 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Albania
	id = annexation.1091
	title = annexation_decision_albania
	desc = annexation_decision_albania_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		1231 = { retain_state = yes }
		163 = { retain_state = yes }
		1209 = { retain_state = yes }
	}

	option = { #Release Albania
		log = "[GetLogInfo]: event annex.1091 option annexation.1091.a"
		name = annexation.1091.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = ALB }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			ALB = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = ALB_Occupied_Monarchy
			}
		}


		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			ALB = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = ALB_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1091 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1091 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1091 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Debar
	id = annexation.1092
	title = annexation_decision_debar
	desc = annexation_decision_debar_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return it to Albania
		log = "[GetLogInfo]: event annex.1092 option annexation.1092.a"
		name = annexation.1092.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		ALB = {
			transfer_state = 1231
		}

		recheck_annexations = yes
	}

	option = { #Give it to Serbia
		log = "[GetLogInfo]: event annex.1092 option annexation.1092.b"
		name = annexation.1092.a
		trigger = {
			is_subject = no
			SER = {
				exists = yes
				OR = {
					is_subject_of = ROOT
					is_in_faction_with = ROOT
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SER = {
			transfer_state = 1231
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1092 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1092 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1092 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Kosovo
	id = annexation.1093
	title = annexation_decision_kosovo
	desc = annexation_decision_kosovo_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return it to Albania
		log = "[GetLogInfo]: event annex.1093 option annexation.1093.a"
		name = annexation.1093.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		ALB = {
			transfer_state = 163
		}

		recheck_annexations = yes
	}

	option = { #Give it to Serbia
		log = "[GetLogInfo]: event annex.1093 option annexation.1093.b"
		name = annexation.1093.a
		trigger = {
			is_subject = no
			SER = {
				exists = yes
				OR = {
					is_subject_of = ROOT
					is_in_faction_with = ROOT
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		SER = {
			transfer_state = 163
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1093 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1093 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1093 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Northern Epirus
	id = annexation.1094
	title = annexation_decision_northern_epirus
	desc = annexation_decision_northern_epirus_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Return it to Albania
		log = "[GetLogInfo]: event annex.1094 option annexation.1094.a"
		name = annexation.1094.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		ALB = {
			transfer_state = 1209
		}

		recheck_annexations = yes
	}

	option = { #Give it to Greece
		log = "[GetLogInfo]: event annex.1094 option annexation.1094.b"
		name = annexation.1094.a
		trigger = {
			is_subject = no
			GRE = {
				exists = yes
				OR = {
					is_subject_of = ROOT
					is_in_faction_with = ROOT
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		GRE = {
			transfer_state = 1209
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1094 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1094 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1094 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Greece
	id = annexation.1095
	title = annexation_decision_greece
	desc = annexation_decision_greece_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		731 = { retain_state = yes }
		184 = { retain_state = yes }
		821 = { retain_state = yes }
		822 = { retain_state = yes }
		339 = { retain_state = yes }
		823 = { retain_state = yes }
	}

	option = { #Release Greece
		log = "[GetLogInfo]: event annex.1095 option annexation.1095.a"
		name = annexation.1095.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = GRE }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			GRE = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = GRE_Occupied_Monarchy
			}
		}


		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			GRE = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = GRE_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1095 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1095 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1095 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Thessaloniniki
	id = annexation.1096
	title = annexation_decision_thessaloniki
	desc = annexation_decision_thessaloniki_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Transfer it to Greece
		log = "[GetLogInfo]: event annex.1096 option annexation.1096.a"
		name = annexation.1096.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		GRE = {
			transfer_state = 731
		}

		recheck_annexations = yes
	}

	option = { #Transfer it to Bulgaria
		log = "[GetLogInfo]: event annex.1096 option annexation.1096.b"
		name = annexation.1096.b
		trigger = {
			is_subject = no
			BUL = {
				exists = yes
				OR = {
					is_subject_of = ROOT
					is_in_faction_with = ROOT
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		BUL = {
			transfer_state = 731
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1096 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1096 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1096 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of West Thrace
	id = annexation.1097
	title = annexation_decision_west_thrace
	desc = annexation_decision_west_thrace_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Transfer it to Greece
		log = "[GetLogInfo]: event annex.1097 option annexation.1097.a"
		name = annexation.1097.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		GRE = {
			transfer_state = 184
		}

		recheck_annexations = yes
	}

	option = { #Transfer it to Bulgaria
		log = "[GetLogInfo]: event annex.1097 option annexation.1097.b"
		name = annexation.1097.b
		trigger = {
			is_subject = no
			BUL = {
				exists = yes
				OR = {
					is_subject_of = ROOT
					is_in_faction_with = ROOT
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		BUL = {
			transfer_state = 184
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1097 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1097 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1097 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of East Thrace
	id = annexation.1098
	title = annexation_decision_east_thrace
	desc = annexation_decision_east_thrace_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	option = { #Transfer it to Greece
		log = "[GetLogInfo]: event annex.1098 option annexation.1098.a"
		name = annexation.1098.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		GRE = {
			transfer_state = 821
		}

		recheck_annexations = yes
	}

	option = { #Transfer it to turkey
		log = "[GetLogInfo]: event annex.1098 option annexation.1098.b"
		name = annexation.1098.b
		trigger = {
			is_subject = no
			TUR = {
				exists = yes
				OR = {
					is_subject_of = ROOT
					is_in_faction_with = ROOT
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		TUR = {
			transfer_state = 821
		}

		recheck_annexations = yes
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1098 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1098 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1098 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Sardinia
	id = annexation.1099
	title = annexation_sardinia
	desc = annexation_sardinia_desc
	picture = GFX_report_PB_Peace_Deals_Europe

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				ITA = {
					ROOT_can_grant_land = yes
				}
			}
			ITA = { save_event_target_as = italy }
		}
	}

	option = { #Release Sardinia
		log = "[GetLogInfo]: event annex.1099 option annexation.1099.a"
		name = annexation.1099.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
			}
		}

		set_temp_variable = { tag_to_release = SRD }
		release_targeted_tag = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			SRD = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = SRD_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			SRD = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = SRD_Occupied_Republic
			}
		}

		recheck_annexations = yes
	}

	option = { #Give Sardinia to Italy
		log = "[GetLogInfo]: event annex.1099 option annexation.1099.b"
		name = annexation.1099.b
		trigger = {
			is_subject = no
			NOT = {
				has_global_flag = PB_GLOBAL_Splitaly
			}
		}

		ai_chance = { base = 0 }

		ITA = {
			transfer_state = 114
		}

		recheck_annexations = yes
	}
	
	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1099 option annexation.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1099 option annexation.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = NWL
				annexations_can_annex = yes
			}
		}
		every_owned_state = {
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1099 option annexation.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}