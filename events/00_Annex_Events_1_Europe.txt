###########################
# Annexation Events concerning Europe
###########################
# By lots of folks
# Converted from on_actions to decisions by Rylock and Dr_Njitram
# Any new post-annexation events need to have their triggers in the KR_on_actions file
###########################
###########################
# Thanks KR ;) - Pax Team
###########################

## the bottom table of context and other events need to be adjusted to Pax - Lexus
## i left one event as example for the rest of the events, if you're not sure check out KR code

# Table of Contents
#	No specific order but please keep events in the order as belowe
#
# Europe
#	France
#		Occitania/Southern France
#		Burgundy
#		Normandy
#		Brittany
#		Picardy
#		Pas de Calais
#		Aquitanie
#		Seine-Maritime
#		Moselle
#		Savoy
#		Nauchatel




#			Prussia (+ East & West Prussia)
#			Posen
#			Masuria
#			Memel
#			Upper Silesia
#			Bavaria
#		Poland
#			Bialystok
#		UBD
#			Estonia
#			Latvia
#		Lithuania
#			Vilnius
#		Austria
#			Austria proper
#			Bohemia
#			Galicia
#				Bukovina
#			Hungary
#				Slovakia
#				Transcarpathia
#				Transylvania
#				West Banat
#				Vojvodina
#				Burgenland
#			Croatia
#				Dalmatia
#				Istria
#			Triest
#			Slovenia
#			Trentino
#		Switzerland
#			Romandy
#			Ticino
#
#	Western Europe
#		France
#			Brittany
#			Pas-de-Calais
#		Britain
#			Scotland
#			Wales
#		Ireland
#		Netherlands
#		Belgium
#			Wallonia
#
#	Northern Europe
#		Denmark
#			Iceland
#			Greenland
#		Norway
#		Sweden
#			Aland
#		Finland
#			Karelia
#
#	Eastern Europe
#		Ukraine
#			Brest
#		White Ruthenia
#			Eastern White Ruth.
#		European Russia
#			Dvinsk
#			Siberia
#
#	Southeastern Europe
#		Albania
#		Montenegro
#		Bosnia
#		Kosovo
#		Serbia
#			Nis
#			Macedonia
#		Romania
#		Bulgaria
#		Constantinople
#		Greece
#			Thessaloniki
#			Keraferia
#			Northern Epirus
#
#	Southern Europe
#		Spain
#			Galicia
#			Euskadi
#			Catalonia
#		Portugal
#		Southern France
#		Corsica
#		Italy
#			Aosta
#			Piedmont
#			Lombardy
#			Venetia
#			Emilia
#			Tuscany
#			Central Italy
#			Rome
#			Southern Italy
#			Sardinia
#		Malta

add_namespace = annexation

#####################################
##   C E N T R A L   E U R O P E   ##
#####################################


country_event = { #Fate of France
	id = annexation.1001
	title = annexation_france
	desc = annexation_france_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = FRA } }
				#FRA = { clear_cores_of_tag_if_possible = yes }
			}
			if = {
				limit = { NOT = { country_exists = OFA } }
				#OFA = { clear_cores_of_tag_if_possible = yes }
			}
			random_other_country = {
				limit = {
					is_ally_with = ROOT
					OR = {
						is_subject = no
						is_subject_of = ROOT
					}
				}
				save_event_target_as = france
			}
			if = {
				limit = { NOT = { has_event_target = france } }
				if = {
					limit = { FRA = { ROOT_can_grant_land = yes } }
					FRA = { save_event_target_as = france }
				}
				else_if = {
					limit = { OFA = { ROOT_can_grant_land = yes } }
					OFA = { save_event_target_as = france }
				}
			}
			17 = { retain_state = yes } #Meurthe
			29 = { retain_state = yes } #Pas-de-Calais
			31 = { retain_state = yes } #Roussillon
			735 = { retain_state = yes } #Savoy
			785 = { retain_state = yes } #Picardy
			831 = { retain_state = yes } #Nice
			832 = { retain_state = yes } #Upper Savoy
			841 = { retain_state = yes } #Apurdi
			972 = { retain_state = yes } #Nauchatel
			1206 = { retain_state = yes } #Moselle
			1207 = { retain_state = yes } #Sedan
			27 = { retain_state = yes } #Bourgogne
			18 = { retain_state = yes } #Champagne
			685 = { retain_state = yes } #Champagne-Ardenne
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1001 option annex.release_france"
		name = annexation.release_france
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				#annexations_AI_release_puppet_default_logic = yes
			}
		}
		set_temp_variable = { tag_to_release = FRA }
		every_state = {
			limit = { is_starting_french_state = yes }
			add_claim_by = var:tag_to_release
			add_core_of = var:tag_to_release
		}

		release_targeted_tag = yes
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			FRA = {
				set_cosmetic_tag = FRA_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			FRA = {
				set_cosmetic_tag = FRA_Occupied_Republic
			}
		}

	}

	option = {
		log = "[GetLogInfo]: event annex.1001 option annex.split_france"
		name = annexation.split_france
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = FRA }
		every_state = {
			limit = { is_only_releasable_france = yes }
		}
		release_targeted_tag = yes
		recheck_annexations = yes

		if = {
			limit = {
				ROOT = {
					has_monarchist_government = yes
				}
			}
			FRA = {
				set_cosmetic_tag = FRA_Occupied_Monarchy
			}
		}

		if = {
			limit = {
				ROOT = {
					has_republican_government = yes
				}
			}
			FRA = {
				set_cosmetic_tag = FRA_Occupied_Republic
			}
		}
	}

	option = { #Give to overlord
		log = "[GetLogInfo]: event annex.1001 option annex.give_to_overlord"
		name = annex.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		every_owned_state = {
			limit = {
				is_starting_french_state = yes
				is_allowed_annexation_state = yes
			}
			transfer_state_and_notify = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1001 option annex.integration"
		name = annex.integration
		trigger = {
			annexations_can_annex = yes
		}
		every_owned_state = {
			#limit = { is_mainland_france_state = yes }
			add_claim_of_ROOT = yes
		}
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annex.1001 option annex.cancel"
		name = annex.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

#country_event = { #Fate of Occitania
#	id = annexation.1002
#	title = annexation_occitania
#	desc = annexation_occitania_desc
#	picture = GFX_report_event_generic_map_france
#
#	is_triggered_only = yes
#}

country_event = { #Fate of Burgundy
	id = annexation.1003
	title = annexation_burgundy
	desc = annexation_burgundy_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { 24 = { is_claim_or_core_of_ROOT = yes } } #Centre
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				24 = { #Centre
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:30.owner = { save_event_target_as = france }
		}
	}

	option = { #Liberate Burgundy
		log = "[GetLogInfo]: event annexation.1003 option annexation.1003.a"
		name = annexation.1003.a
		trigger = {
			is_subject = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = BRG }
		17 = { remove_claim_and_add_core_of_target = yes } #Meurthe
		18 = { remove_claim_and_add_core_of_target = yes } #Champagne
		27 = { remove_claim_and_add_core_of_target = yes } #Bourgogne
		685 = { remove_claim_and_add_core_of_target = yes } #Champagne-Ardenne
		809 = { remove_claim_and_add_core_of_target = yes } #Franche-Comte
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #give to France
		log = "[GetLogInfo]: event annexation.1003 option annexation.give_to_france"
		name = annexation.give_to_france
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			modifier = {
				factor = 0
				#is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0.1
				event_target:france = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		17 = { transfer_if_owned = yes } #Meurthe
		18 = { transfer_if_owned = yes } #Champagne
		27 = { transfer_if_owned = yes } #Bourgogne
		685 = { transfer_if_owned = yes } #Champagne-Ardenne
		809 = { transfer_if_owned = yes } #Franche-Comte
		recheck_annexations = yes
	}

	option = { #give to overlord
		log = "[GetLogInfo]: event annexation.1003 option annexation.give_to_overlord"
		name = annexation.give_to_overlord
		trigger = {
			annexations_should_give_lands_to_overlord = yes
		}
		set_temp_variable = { tag_to_release = overlord }
		17 = { transfer_if_owned = yes } #Meurthe
		18 = { transfer_if_owned = yes } #Champagne
		27 = { transfer_if_owned = yes } #Bourgogne
		685 = { transfer_if_owned = yes } #Champagne-Ardenne
		809 = { transfer_if_owned = yes } #Franche-Comte
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annexation.1003 option annexation.integration"
		name = annexation.integration
		trigger = {
			annexations_can_annex = yes
		}
		14 = { add_claim_of_ROOT = yes } #Upper Brittany
		983 = { add_claim_of_ROOT = yes } #Brittany
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1003 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

#country_event = { #Fate of Normandy
#	id = annexation.1004
#	title = annexation_normandy
#	desc = annexation_normandy_desc
#	picture = GFX_report_event_generic_map_france
#
#	is_triggered_only = yes
#}
#
#country_event = { #Fate of Brittany
#	id = annexation.1005
#	title = annexation_brittany
#	desc = annexation_brittany_desc
#	picture = GFX_report_event_generic_map_france
#
#	is_triggered_only = yes
#}
#
#country_event = { #Fate of Picardy
#	id = annexation.1006
#	title = annexation_picardy
#	desc = annexation_picardy_desc
#	picture = GFX_report_event_generic_map_france
#
#	is_triggered_only = yes
#}
#
#country_event = { #Fate of Pas-de-Calais
#	id = annexation.1007
#	title = annexation_pas_de_calais
#	desc = annexation_pas_de_calais_desc
#	picture = GFX_report_event_generic_map_france
#
#	is_triggered_only = yes
#}
#
#country_event = { #Fate of Aquitaine
#	id = annexation.1008
#	title = annexation_aquitaine
#	desc = annexation_aquitaine_desc
#	picture = GFX_report_event_generic_map_france
#
#	is_triggered_only = yes
#}
#
#country_event = { #Fate of Seine-Maritime
#	id = annexation.1009
#	title = annexation_seine_maritime
#	desc = annexation_seine_maritime_desc
#	picture = GFX_report_event_generic_map_france
#
#	is_triggered_only = yes
#}
#
#country_event = { #Fate of Moselle
#	id = annexation.1010
#	title = annexation_moselle
#	desc = annexation_moselle_desc
#	picture = GFX_report_event_generic_map_france
#
#	is_triggered_only = yes
#}
#
#country_event = { #Fate of Savoy
#	id = annexation.1011
#	title = annexation_savoy
#	desc = annexation_savoy_desc
#	picture = GFX_report_event_generic_map_france
#
#	is_triggered_only = yes
#}
#
#country_event = { #Fate of Nauchatel
#	id = annexation.1012
#	title = annexation_nauchatel
#	desc = annexation_nauchatel_desc
#	picture = GFX_report_event_generic_map_france
#
#	is_triggered_only = yes
#}

country_event = { #Fate of Portugal
	id = annexation.1016
	title = annexation_portugal
	desc = annexation_portugal_desc
	picture = GFX_report_event_Generic_Art_Gallery

	is_triggered_only = yes

	immediate = {

		171 = { retain_state = yes } #Galicia

		hidden_effect = {
			#if = {
			#	limit = { NOT = { country_exists = POR } }
			#	every_state = {
			#		if = {
			#			limit = { is_portugal = no }
			#			remove_core_of = POR
			#		}
			#		else = {
			#			add_core_of = POR
			#		}
			#		remove_claim_by = POR
			#	}
			#	POR = { POR_remove_monarchy = yes }
			#}
			if = {
				limit = {
					original_tag = SPA
					#has_socialist_government = yes
				}
				save_event_target_as = can_annex
			}
			if = {
				limit = {
					SPA = {
						ROOT_can_grant_land = yes
						#OR = {
						#	is_subject = no
						#	has_socialist_government = yes
						#}
					}
				}
				SPA = { save_event_target_as = spain }
			}
			if = {
				limit = {
					PEF = {
						ROOT_can_grant_land = yes
						#OR = {
						#	is_subject = no
						#	has_socialist_government = yes
						#}
					}
				}
				PEF = { save_event_target_as = portuguese_monarchy }
			}
		}
	}

	option = { #Liberate a republican Portugal - as a puppet
		log = "[GetLogInfo]: event annexation.1016 option annexation.1016.a"
		name = annexation.1016.a
		trigger = {
			is_subject = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
			#modifier = {
			#	factor = 0
			#	NOT = { country_exists = POR }
			#	OR = {
			#		is_monarchy = yes
			#		is_german_tag = yes
			#	}
			#}
			#modifier = {
			#	factor = 0
			#	is_ally_with = event_target:spain
			#	OR = {
			#		is_major = no
			#		has_socialist_government = yes
			#	}
			#}
		}
		if = {
			limit = { country_exists = POR }
			custom_effect_tooltip = POR_puppet_tooltip
			
		}
		else = {
			set_temp_variable = { tag_to_release = POR }
			release_targeted_tag = yes
		}
		recheck_annexations = yes
	}

	option = { #Restore the Portuguese monarchy/empire as a puppet
		log = "[GetLogInfo]: event annexation.1016 option annexation.1016.b"
		name = annexation.1016.b
		trigger = {
			is_subject = no
			NOT = { country_exists = PEF }
		}
		ai_chance = {
			base = 50
			#modifier = {
			#	factor = 25
			#	country_exists = PEF
			#}
		}
		set_temp_variable = { tag_to_release = PEF }
		release_targeted_tag = yes

		#var:tag_to_release = { POR_monarchy_setup = yes }
		recheck_annexations = yes
	}

	option = { #Give it to the Portuguese monarchy/empire
		log = "[GetLogInfo]: event annexation.1016 option annexation.1016.c"
		name = annexation.1016.c
		trigger = {
			has_event_target = portuguese_monarchy
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 25
				country_exists = PEF
			}
		}

		set_temp_variable = { tag_to_release = event_target:portuguese_monarchy }
		POR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
		#recheck_annexations = yes

		#var:tag_to_release = { POR_monarchy_setup = yes }
		recheck_annexations = yes
	}


	option = { #give to Spain
		log = "[GetLogInfo]: event annexation.1016 option annexation.give_to_spain"
		name = annexation.give_to_spain
		trigger = {
			has_event_target = spain
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				annexations_can_annex = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:spain }
		POR = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
		recheck_annexations = yes
	}

	option = { #Integrate - for Spain - lets see if i should do pef
		log = "[GetLogInfo]: event annexation.1016 option annexation.integration"
		name = annexation.integration
		trigger = {
			annexations_can_annex = yes
		}
		POR = { add_claim_of_ROOT_on_valid_cores = yes }
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1016 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}

country_event = { #Fate of Galicia
	id = annexation.1017
	title = annexation_spanish_galicia
	desc = annexation_spanish_galicia_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {

		if = {
			limit = {
				OR = {
					174 = { is_claim_or_core_of_ROOT = yes } #León
					793 = { is_claim_or_core_of_ROOT = yes } #Asturias
				}
			}
			save_event_target_as = can_annex
		}
		if = {
			limit = {
				174 = { #León
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:174.owner = { save_event_target_as = spain_leon }
		}
		if = {
			limit = {
				1193 = { #Asturias
					annexations_state_owner_is_valid_grant_target = yes
					owner = {
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:spain_leon }
					}
				}
			}
			var:1193.owner = { save_event_target_as = spain_asturias }
		}
		if = {
			limit = {
				180 = { #Porto
					annexations_state_owner_is_valid_grant_target = yes
					owner = { ROOT_can_grant_land = yes }
				}
			}
			var:180.owner = { save_event_target_as = porto_owner }
		}
	}

	#option = { #puppet
	#	log = "[GetLogInfo]: event annex.1085 option annex.1085.a"
	#	name =annexation.1017.a
	#	trigger = {
	#		is_subject = no
	#	}
	#	ai_chance = { base = 0 }
	#	set_temp_variable = { tag_to_release = GLC }
	#	release_targeted_tag = yes
	#	recheck_annexations = yes
	#}

	option = { #give to Spanish owner of León
		log = "[GetLogInfo]: event annexation.1017 option annexation.1017.b"
		name = annexation.1017.b
		trigger = {
			has_event_target = spain_leon
		}
		ai_chance = {
			base = 40
			#modifier = {
			#	factor = 0
			#	annexations_can_annex = yes
			#}
			#modifier = {
			#	factor = 0
			#	NOT = { is_ally_with = event_target:spain_leon }
			#	OR = {
			#		is_ally_with = event_target:spain_asturias
			#		is_ally_with = event_target:portugal
			#	}
			#}
			#modifier = {
			#	factor = 0.1
			#	event_target:spain_leon = { is_subject = yes }
			#}
		}
		set_temp_variable = { tag_to_release = event_target:spain_leon }
		171 = { transfer_state_and_notify = yes }
		transfer_targeted_territory = yes
		recheck_annexations = yes
	}

	option = { #give to Spanish owner of Asturias
		log = "[GetLogInfo]: event annexation.1017 option annexation.1017.c"
		name = annexation.1017.c
		trigger = {
			has_event_target = spain_asturias
		}
		ai_chance = {
			base = 30
			#modifier = {
			#	factor = 0
			#	annexations_can_annex = yes
			#}
			#modifier = {
			#	factor = 0
			#	NOT = { is_ally_with = event_target:spain_asturias }
			#	OR = {
			#		is_ally_with = event_target:spain_leon
			#		is_ally_with = event_target:portugal
			#	}
			#}
			#modifier = {
			#	factor = 0.1
			#	event_target:spain_asturias = { is_subject = yes }
			#}
		}
		set_temp_variable = { tag_to_release = event_target:spain_asturias }
		171 = { transfer_state_and_notify = yes }
		transfer_targeted_territory = yes
		recheck_annexations = yes
	}

	option = { #give to Spanish owner of Porto
		log = "[GetLogInfo]: event annexation.1017 option annexation.1017.d"
		name = annexation.1017.d
		trigger = {
			has_event_target = porto_owner
		}
		ai_chance = {
			base = 30
			#modifier = {
			#	factor = 0
			#	annexations_can_annex = yes
			#}
			#modifier = {
			#	factor = 0
			#	NOT = { is_ally_with = event_target:spain_asturias }
			#	OR = {
			#		is_ally_with = event_target:spain_leon
			#		is_ally_with = event_target:portugal
			#	}
			#}
			#modifier = {
			#	factor = 0.1
			#	event_target:spain_asturias = { is_subject = yes }
			#}
		}
		set_temp_variable = { tag_to_release = event_target:porto_owner}
		171 = { transfer_state_and_notify = yes }
		transfer_targeted_territory = yes
		recheck_annexations = yes
	}

	#option = { #Give to overlord
	#	log = "[GetLogInfo]: event annex.1085 option annex.give_to_overlord"
	#	name = annex.give_to_overlord
	#	trigger = {
	#		annexations_should_give_lands_to_overlord = yes
	#	}
	#	set_temp_variable = { tag_to_release = overlord }
	#	GLC = { set_transfer_target_cores = yes }
	#	transfer_targeted_territory = yes
	#	recheck_annexations = yes
	#}

	option = { #Integrate
		log = "[GetLogInfo]: event annexation.1017 option annexation.integration"
		name = annexation.integration
		trigger = {
			annexations_can_annex = yes
		}
		#GLC = { add_claim_of_ROOT_on_valid_cores = yes }
		recheck_annexations = yes
	}

	option = { #Cancel
		log = "[GetLogInfo]: event annexation.1017 option annexation.cancel"
		name = annexation.cancel
		ai_chance = { base = 0 }
		recheck_annexations = yes
	}
}
